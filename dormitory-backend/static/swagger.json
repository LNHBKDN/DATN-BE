{
  "openapi": "3.0.0",
  "info": {
    "title": "Dormitory API",
    "description": "API for managing dormitory operations including authentication, admin, areas, registrations, reports, rooms, users, contracts, bills, notifications, services, and payments",
    "version": "1.0.0"
  },
  "paths": {
    "/api/auth/admin/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authenticate an admin using username",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {"type": "string", "example": "admin0001"},
                  "password": {"type": "string", "example": "admin123"}
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {"type": "string"},
                    "id": {"type": "integer"},
                    "type": {"type": "string", "enum": ["ADMIN"]}
                  }
                }
              }
            }
          },
          "400": {"description": "Missing username or password"},
          "401": {"description": "Invalid credentials"},
          "500": {"description": "Server error"}
        }
      }
    },
    "/api/auth/user/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authenticate a user using email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string", "example": "hanh123zes@gmail.com"},
                  "password": {"type": "string", "example": "FtXqAtf67cpR"}
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {"type": "string"},
                    "id": {"type": "integer"},
                    "type": {"type": "string", "enum": ["USER"]}
                  }
                }
              }
            }
          },
          "400": {"description": "Missing email or password"},
          "401": {"description": "Invalid credentials"},
          "500": {"description": "Server error"}
        }
      }
    },
    "/api/auth/logout": {
     "post": {
      "tags": ["Authentication"],
      "summary": "Log out a user or admin by revoking the JWT token",
      "security": [{"Bearer": []}],
      "responses": {
        "200": {
          "description": "Logout successful, token revoked",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Đăng xuất thành công"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized, token missing or invalid"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
    },
   "/api/auth/forgot-password": {
    "post": {
      "tags": ["Authentication"],
      "summary": "Generate a 6-digit reset code and send it via email",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user001@example.com"
                }
              },
              "required": ["email"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Reset code email sent",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Mã xác nhận đã được gửi qua email."
                  },
                  "user_type": {
                    "type": "string",
                    "enum": ["ADMIN", "USER"],
                    "example": "USER"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Email is required, invalid email format, or JSON malformed"
        },
        "404": {
          "description": "Email not found"
        },
        "500": {
          "description": "Server error or email sending failed"
        }
      }
    }
  },
 
  "/api/auth/reset-password": {
    "post": {
      "tags": ["Authentication"],
      "summary": "Reset a user or admin password using a valid 6-digit reset code",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user001@example.com",
                  "description": "Email of the account"
                },
                "newPassword": {
                  "type": "string",
                  "example": "NewPass123!",
                  "summary": "Đặt lại mật khẩu bằng mã xác nhận",
                  "description": "New password (minimum 8 characters, must include uppercase, lowercase, number, and special character)"
                },
                "code": {
                  "type": "string",
                  "example": "123456",
                  "description": "6-digit reset code sent via email"
                }
              },
              "required": ["email", "newPassword", "code"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password reset successful",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Đặt lại mật khẩu thành công"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Missing email, new password, or code; invalid JSON, email format, code format, weak password, incorrect code, code expired, or account not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
    },
    "/api/admin/admins": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all admins",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"}
        ],
        "responses": {
          "200": {
            "description": "List of admins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "admins": {"type": "array", "items": {"$ref": "#/components/schemas/Admin"}},
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          },
          "403": {"description": "Admin access required"}
        }
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Create a new admin",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {"type": "string", "example": "admin002"},
                  "password": {"type": "string", "example": "Admin@123"},
                  "email": {"type": "string", "example": "admin002@example.com"},
                  "full_name": {"type": "string", "example": "Nguyen Van B"},
                  "phone": {"type": "string", "example": "0987654321"}
                },
                "required": ["username", "password", "email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Admin"}
              }
            }
          },
          "400": {"description": "Missing fields, weak password, or duplicate username/email"},
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/admin/admins/{admin_id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get admin by ID",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "admin_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Admin ID"}
        ],
        "responses": {
          "200": {
            "description": "Admin details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Admin"}
              }
            }
          },
          "404": {"description": "Admin not found"},
          "403": {"description": "Admin access required"}
        }
      },
      "put": {
        "tags": ["Admin"],
        "summary": "Update admin",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "admin_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Admin ID"}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "full_name": {"type": "string", "example": "Nguyen Van C"},
                  "email": {"type": "string", "example": "admin003@example.com"},
                  "phone": {"type": "string", "example": "0912345678"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Admin"}
              }
            }
          },
          "400": {"description": "Duplicate email"},
          "404": {"description": "Admin not found"},
          "403": {"description": "Admin access required"}
        }
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "Delete admin",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "admin_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Admin ID"}
        ],
        "responses": {
          "204": {"description": "Admin deleted"},
          "403": {"description": "Cannot delete self or last admin"},
          "404": {"description": "Admin not found"}
        }
      }
    },
    "/api/admin/reset-password/request": {
      "post": {
      "tags": ["Admin"],
      "summary": "Request a 6-digit reset code for admin password",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "admin001@example.com",
                  "description": "Email of the admin"
                }
              },
              "required": ["email"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Reset code email sent",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Mã xác nhận đã được gửi qua email"
                  }
                }
              }
            }
          }
        },
        "201": {
          "description": "Reset code created but email sending failed",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Tạo mã xác nhận thành công nhưng gửi email thất bại. Vui lòng thử lại sau."
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Missing email, invalid JSON, or invalid email format"
        },
        "404": {
          "description": "Admin not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
    "/api/admin/reset-password": {
    "post": {
    "tags": ["Admin"],
    "summary": "Reset admin password for an account with a valid reset code",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "admin001@example.com",
                "description": "Email of the admin"
              },
              "newPassword": {
                "type": "string",
                "example": "NewPass123!",
                "description": "New password (minimum 8 characters, including uppercase, lowercase, number, and special character)"
              },
              "code": {
                "type": "string",
                "example": "123456",
                "description": "6-digit reset code sent via email"
              }
            },
            "required": ["email", "newPassword", "code"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Password reset successful",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Đặt lại mật khẩu thành công"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Missing email, new password, or code; invalid JSON, email format, password format, code format, incorrect code, or reset code expired",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "examples": [
                    "Mã xác nhận không chính xác",
                    "Mã xác nhận phải là chuỗi 6 chữ số",
                    "Mật khẩu phải có ít nhất 8 ký tự",
                    "Email không hợp lệ"
                  ]
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Admin not found"
      },
      "500": {
        "description": "Server error"
      }
      }
      }
    },
    "/api/areas": {
      "get": {
      "tags": ["Area"],
      "summary": "Get all areas",
      "security": [{"Bearer": []}],
      "parameters": [
        {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
        {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"}
      ],
      "responses": {
        "200": {
          "description": "List of areas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "areas": {"type": "array", "items": {"$ref": "#/components/schemas/Area"}},
                  "total": {"type": "integer"},
                  "pages": {"type": "integer"},
                  "current_page": {"type": "integer"}
                }
              }
            }
          }
        },
        "403": {"description": "Admin access required"}
      }
      }
    },
    "/api/areas/{area_id}": {
      "get": {
      "tags": ["Area"],
      "summary": "Get area by ID",
      "security": [{"Bearer": []}],
      "parameters": [
        {"name": "area_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Area ID"}
      ],
      "responses": {
        "200": {
          "description": "Area details",
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Area"}
            }
          }
        },
        "404": {"description": "Area not found"},
        "403": {"description": "Admin access required"}
      }
      }
    },
    "/api/admin/areas": {
     "post": {
      "tags": ["Area"],
      "summary": "Create a new area",
      "security": [{"Bearer": []}],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Khu A",
                  "description": "Tên khu vực (tối đa 50 ký tự)"
                }
              },
              "required": ["name"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Area created",
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Area"}
            }
          }
        },
        "400": {
          "description": "Thiếu tên, tên quá dài hoặc trùng lặp",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "examples": [
                      "Yêu cầu tên khu vực",
                      "Tên khu vực không được vượt quá 50 ký tự",
                      "Tên khu vực đã tồn tại"
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {"description": "Admin access required"},
        "500": {"description": "Lỗi server hoặc lỗi khi lưu dữ liệu"}
      }
      }
    },
    "/api/admin/areas/{area_id}": {
     "put": {
      "tags": ["Area"],
      "summary": "Update area",
      "security": [{"Bearer": []}],
      "parameters": [
        {"name": "area_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Area ID"}
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Khu B",
                  "description": "Tên khu vực mới (tối đa 50 ký tự)"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Area updated",
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Area"}
            }
          }
        },
        "400": {
          "description": "Tên quá dài hoặc trùng lặp",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "examples": [
                      "Tên khu vực không được vượt quá 50 ký tự",
                      "Tên khu vực đã tồn tại"
                    ]
                  }
                }
              }
            }
          }
        },
        "404": {"description": "Area not found"},
        "403": {"description": "Admin access required"},
        "500": {"description": "Lỗi server hoặc lỗi khi lưu dữ liệu"}
      }
      },
      "delete": {
      "tags": ["Area"],
      "summary": "Delete area",
      "security": [{"Bearer": []}],
      "parameters": [
        {"name": "area_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Area ID"}
      ],
      "responses": {
        "204": {"description": "Area deleted"},
        "400": {
          "description": "Không thể xóa vì có phòng liên kết",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string", "example": "Không thể xóa khu vực vì có phòng liên kết"}
                }
              }
            }
          }
        },
        "404": {"description": "Area not found"},
        "403": {"description": "Admin access required"},
        "500": {"description": "Lỗi server hoặc lỗi khi xóa dữ liệu"}
      }
      }
    },
    
    "/api/registrations": {
      "post": {
  "tags": ["Registration"],
  "summary": "Create a new room registration request",
  "requestBody": {
    "required": true,
    "content": {
      "application/json": {
        "schema": {
          "type": "object",
          "properties": {
            "name_student": {"type": "string", "example": "Nguyen Van A"},
            "email": {"type": "string", "example": "student@example.com"},
            "phone_number": {"type": "string", "example": "0123456789"},
            "room_id": {"type": "integer", "example": 1},
            "number_of_people": {"type": "integer", "example": 2, "description": "Số người đăng ký (mặc định là 1)"},
            "information": {"type": "string", "example": "Thông tin bổ sung"}
          },
          "required": ["name_student", "email", "phone_number", "room_id", "number_of_people"]
        }
      }
    }
  },
  "responses": {
    "201": {
      "description": "Registration created",
      "content": {
        "application/json": {
          "schema": {"$ref": "#/components/schemas/Registration"}
        }
      }
    },
    "400": {
      "description": "Missing required fields, invalid email format, email already used, or room does not have enough slots",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "examples": [
                  "Yêu cầu name_student, email, phone_number, room_id và number_of_people",
                  "Định dạng email không hợp lệ",
                  "Email này đã được sử dụng để đăng ký, vui lòng chờ xử lý",
                  "Phòng không đủ chỗ cho số người đăng ký"
                ]
              }
            }
          }
        }
      }
    },
    "404": {"description": "Room not found"}
  }
      },
      "get": {
    "tags": ["Registration"],
    "summary": "Get all registrations (Admin)",
    "security": [{"Bearer": []}],
    "parameters": [
      {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
      {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"},
      {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "Filter by status"},
      {"name": "room_id", "in": "query", "schema": {"type": "integer"}, "description": "Filter by room ID"},
      {"name": "name_student", "in": "query", "schema": {"type": "string"}, "description": "Filter by student name (partial match)"},
      {"name": "meeting_datetime", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "Filter by meeting date (YYYY-MM-DD)"}
    ],
    "responses": {
      "200": {
        "description": "List of registrations with room details",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "registrations": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Registration"}
                },
                "total": {"type": "integer"},
                "pages": {"type": "integer"},
                "current_page": {"type": "integer"}
              }
            }
          }
        }
      },
      "403": {"description": "Admin access required"}
    }
      }
    },
    "/api/registrations/{registration_id}": {
      "get": {
    "tags": ["Registration"],
    "summary": "Get registration by ID (Admin)",
    "description": "Retrieve details of a specific registration by its ID, including room information such as room name, capacity, price, and current person number.",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "registration_id",
        "in": "path",
        "required": true,
        "schema": {"type": "integer"},
        "description": "The ID of the registration to retrieve"
      }
    ],
    "responses": {
      "200": {
        "description": "Registration details with room information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Registration"
            }
          }
        }
      },
      "404": {
        "description": "Registration not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Không tìm thấy yêu cầu đăng ký"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Admin access required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Yêu cầu quyền admin"
                }
              }
            }
          }
        }
      }
    }
      }
    },
    "/api/registrations/batch": {
      "delete": {
        "tags": ["Registration"],
        "summary": "Xóa các đăng ký dựa trên danh sách ID và điều kiện",
        "description": "Xóa các đăng ký thỏa mãn các điều kiện sau: trạng thái PENDING quá 30 ngày, APPROVED với thời gian họp đã được đặt (`meeting_datetime`), hoặc REJECTED. Yêu cầu quyền admin.",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "registration_ids": {
                    "type": "array",
                    "items": {"type": "integer"},
                    "example": [1, 2, 3]
                  }
                },
                "required": ["registration_ids"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Xóa đăng ký thành công hoặc không có đăng ký nào để xóa",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {"type": "string", "example": "Đã xóa thành công 2 đăng ký"},
                        "deleted_ids": {
                          "type": "array",
                          "items": {"type": "integer"},
                          "example": [1, 3]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {"type": "string", "example": "Không có đăng ký nào trong danh sách thỏa mãn điều kiện để xóa"}
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu đầu vào không hợp lệ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Danh sách registration_ids không hợp lệ hoặc trống"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Lỗi server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Lỗi server"},
                    "error": {"type": "string", "example": "Chi tiết lỗi"}
                  }
                }
              }
            }
          },
          "403": {"description": "Admin access required"}
        }
      }
      },
    "/api/registrations/{registration_id}/status": {
    "put": {
    "tags": ["Registration"],
    "summary": "Update registration status and notify user via email (Admin)",
    "description": "Cập nhật trạng thái đăng ký (APPROVED hoặc REJECTED) và gửi email thông báo cho người dùng. Nếu trạng thái là REJECTED, lý do từ chối là bắt buộc.",
    "security": [{"Bearer": []}],
    "parameters": [
      {"name": "registration_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Registration ID"}
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "status": {"type": "string", "enum": ["APPROVED", "REJECTED"], "example": "APPROVED"},
              "rejection_reason": {"type": "string", "example": "Không đủ điều kiện"}
            },
            "required": ["status"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Status updated and notification email sent",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string", "example": "Cập nhật trạng thái thành công và email thông báo đã được gửi."},
                "registration": {"$ref": "#/components/schemas/Registration"}
              }
            }
          }
        }
      },
      "400": {"description": "Invalid status or missing rejection reason"},
      "404": {"description": "Registration not found"},
      "403": {"description": "Admin access required"}
    }
      }
    },
    "/api/registrations/{registration_id}/meeting": {
"put": {
    "tags": ["Registration"],
    "summary": "Set meeting datetime and location for registration (Admin)",
    "security": [{"Bearer": []}],
    "parameters": [
      {"name": "registration_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Registration ID"}
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "meeting_datetime": {
                "type": "string", 
                "format": "date-time", 
                "example": "2025-04-15T10:00:00", 
                "description": "Thời gian gặp mặt (ISO format)"
              },
              "meeting_location": {
                "type": "string", 
                "example": "Văn phòng quản lý ký túc xá", 
                "description": "Địa điểm gặp mặt"
              }
            },
            "required": ["meeting_datetime", "meeting_location"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Meeting set and email sent",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string", "example": "Thiết lập thời gian và địa điểm gặp mặt thành công, email thông báo đã được gửi"},
                "registration": {"$ref": "#/components/schemas/Registration"}
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid datetime, location, or registration not approved",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "examples": [
                    "Thời gian gặp mặt phải ở tương lai",
                    "Định dạng thời gian không hợp lệ, sử dụng định dạng ISO (VD: 2025-04-15T10:00:00)",
                    "Yêu cầu meeting_datetime và meeting_location"
                  ]
                }
              }
            }
          }
        }
      },
      "404": {"description": "Registration not found"},
      "500": {"description": "Email sending failed"},
      "403": {"description": "Admin access required"}
    }
      }
    },
    "/api/admin/reports": {
      "get": {
        "tags": ["Report"],
        "summary": "Get all reports (Admin)",
        "description": "Retrieve a paginated list of all reports, with optional filters for user ID, room ID, and status. Requires admin access.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {"type": "integer", "default": 1},
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {"type": "integer", "default": 10},
            "description": "Items per page"
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {"type": "integer"},
            "description": "Filter by user ID"
          },
          {
            "name": "room_id",
            "in": "query",
            "schema": {"type": "integer"},
            "description": "Filter by room ID"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "RECEIVED", "IN_PROGRESS", "RESOLVED", "CLOSED"]
            },
            "description": "Filter by report status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Report"}
                    },
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid page or limit parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found or invalid filter values",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/me/reports": {
      "get": {
        "tags": ["Report"],
        "summary": "Get current user's reports",
        "description": "Retrieve a paginated list of reports created by the authenticated user, with optional status filter.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {"type": "integer", "default": 1},
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {"type": "integer", "default": 10},
            "description": "Items per page"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "RECEIVED", "IN_PROGRESS", "RESOLVED", "CLOSED"]
            },
            "description": "Filter by report status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Report"}
                    },
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid page, limit, or status parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/{report_id}": {
      "get": {
        "tags": ["Report"],
        "summary": "Get report by ID (Admin or owner)",
        "description": "Retrieve details of a specific report. Accessible by admins or the user who created the report.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Report ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Report details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Report"}
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Report not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reports": {
 "post": {
    "tags": ["Report"],
    "summary": "Create a new report with optional images/videos (User)",
    "security": [{"Bearer": []}],
    "requestBody": {
      "required": true,
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "room_id": {
                "type": "integer",
                "description": "ID of the room associated with the report",
                "example": 1
              },
              "report_type_id": {
                "type": "integer",
                "description": "ID of the report type (optional)",
                "example": 1,
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Title of the report (max 255 characters)",
                "example": "Broken air conditioner"
              },
              "content": {
                "type": "string",
                "description": "Detailed description of the report (max 65535 characters)",
                "example": "The air conditioner in Room A101 is not cooling properly. Please send a technician to check."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                },
                "description": "Array of image/video files (png, jpg, jpeg, gif, mp4, mov, avi; max 10 files, 100MB each, total 1000MB)",
                "example": ["ac_issue.jpg", "ac_video.mp4"]
              },
              "alt_text_0": {
                "type": "string",
                "description": "Description for the first image/video",
                "example": "Broken air conditioner",
                "nullable": true
              }
            },
            "required": ["room_id", "title", "content"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Report created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Report"
            },
            "example": {
              "report_id": 1,
              "room_id": 1,
              "user_id": 10,
              "report_type_id": 1,
              "title": "Broken air conditioner",
              "description": "The air conditioner in Room A101 is not cooling properly. Please send a technician to check.",
              "status": "PENDING",
              "created_at": "2025-04-18T23:13:04",
              "resolved_at": null,
              "closed_at": null,
              "room_details": {
                "room_id": 1,
                "name": "Room A101"
              },
              "user_details": {
                "user_id": 10,
                "fullname": "Nguyen Van A"
              },
              "report_type_details": {
                "report_type_id": 1,
                "name": "Maintenance"
              },
              "images": [
                {
                  "image_id": 1,
                  "report_id": 1,
                  "image_url": "/Uploads/report_images/1_Room_A101_Nguyen_Van_A/ac_issue.jpg",
                  "file_type": "image",
                  "alt_text": "Broken air conditioner",
                  "is_deleted": false,
                  "deleted_at": null
                }
              ]
            }
          }
        }
      },
      "400": {
        "description": "Missing required fields, invalid data, or invalid files",
        "content": {
          "application/json": {
            "example": {
              "message": "Yêu cầu các trường bắt buộc: room_id, title, content"
            }
          }
        }
      },
      "401": {
        "description": "Invalid or missing token",
        "content": {
          "application/json": {
            "example": {
              "message": "Token không hợp lệ hoặc thiếu thông tin người dùng"
            }
          }
        }
      },
      "403": {
        "description": "User does not have a valid contract for the room",
        "content": {
          "application/json": {
            "example": {
              "message": "Bạn không có hợp đồng hợp lệ trong phòng này"
            }
          }
        }
      },
      "404": {
        "description": "Room, report type, or user not found",
        "content": {
          "application/json": {
            "example": {
              "message": "Không tìm thấy phòng"
            }
          }
        }
      },
      "413": {
        "description": "Request entity too large",
        "content": {
          "application/json": {
            "example": {
              "message": "Kích thước yêu cầu vượt quá giới hạn 1000MB"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "example": {
              "message": "Lỗi server nội bộ, vui lòng thử lại sau"
            }
          }
        }
      }
    }
      }
    },
    "/api/admin/reports/{report_id}": {
      "put": {
        "tags": ["Report"],
        "summary": "Update report (Admin)",
        "description": "Update details of a specific report. Requires admin access.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Report ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "room_id": {
                    "type": "integer",
                    "example": 2,
                    "description": "ID of the room"
                  },
                  "report_type_id": {
                    "type": "integer",
                    "example": 2,
                    "description": "ID of the report type"
                  },
                  "title": {
                    "type": "string",
                    "example": "Broken Light",
                    "description": "Title of the report"
                  },
                  "content": {
                    "type": "string",
                    "example": "The ceiling light is not working.",
                    "description": "Detailed description of the issue"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["PENDING", "RECEIVED", "IN_PROGRESS", "RESOLVED", "CLOSED"],
                    "example": "RESOLVED",
                    "description": "Status of the report"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Report"}
              }
            }
          },
          "400": {
            "description": "Invalid input data or status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Report, room, or report type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Report"],
        "summary": "Delete report (Admin)",
        "description": "Delete a specific report. Requires admin access.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Report ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Report deleted successfully"
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Report not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/reports/{report_id}/status": {
      "put": {
        "tags": ["Report"],
        "summary": "Update report status (Admin)",
        "description": "Update the status of a specific report. Requires admin access.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Report ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["PENDING", "RECEIVED", "IN_PROGRESS", "RESOLVED", "CLOSED"],
                    "example": "RESOLVED",
                    "description": "New status for the report"
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report status updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Report"}
              }
            }
          },
          "400": {
            "description": "Invalid status or missing data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Report not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/report-types": {
      "get": {
        "tags": ["ReportType"],
        "summary": "Get all report types (Public)",
        "description": "Retrieve a paginated list of all report types.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of report types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "report_types": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ReportType" }
                    },
                    "total": { "type": "integer", "example": 1 },
                    "pages": { "type": "integer", "example": 1 },
                    "current_page": { "type": "integer", "example": 1 }
                  },
                  "required": ["report_types", "total", "pages", "current_page"]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Lỗi server" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/report-types/{report_type_id}": {
      "get": {
        "tags": ["ReportType"],
        "summary": "Get report type by ID (Public)",
        "description": "Retrieve details of a specific report type by its ID.",
        "parameters": [
          {
            "name": "report_type_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the report type to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Report type details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReportType" }
              }
            }
          },
          "404": {
            "description": "Report type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Không tìm thấy loại báo cáo" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Lỗi server" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/report-types": {
      "post": {
        "tags": ["ReportType"],
        "summary": "Create a new report type (Admin)",
        "description": "Create a new report type and automatically create a folder for storing related images with the name format report_<name>.",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Room Damage"
                  },
                  "description": {
                    "type": "string",
                    "example": "Báo cáo về hư hỏng phòng",
                    "nullable": true
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Report type created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReportType" }
              }
            }
          },
          "400": {
            "description": "Missing required fields or duplicate name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": ["Thiếu dữ liệu", "Yêu cầu name", "Tên đã tồn tại"]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Yêu cầu quyền admin" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error or folder creation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": ["Lỗi khi tạo loại báo cáo", "Không thể tạo thư mục cho loại báo cáo"]
                    },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/report-types/{report_type_id}": {
      "put": {
        "tags": ["ReportType"],
        "summary": "Update a report type (Admin)",
        "description": "Update details of a specific report type by its ID. If the name changes, the associated folder will be renamed.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "report_type_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the report type to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Room Damage Updated"
                  },
                  "description": {
                    "type": "string",
                    "example": "Báo cáo về hư hỏng phòng (đã cập nhật)",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report type updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReportType" }
              }
            }
          },
          "400": {
            "description": "Missing data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Thiếu dữ liệu" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Report type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Không tìm thấy loại báo cáo" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Yêu cầu quyền admin" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error or folder rename error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": ["Lỗi khi cập nhật loại báo cáo", "Không thể đổi tên thư mục cho loại báo cáo"]
                    },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ReportType"],
        "summary": "Delete a report type (Admin)",
        "description": "Delete a specific report type by its ID. The associated image folder will not be deleted.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "report_type_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the report type to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Report type deleted successfully"
          },
          "404": {
            "description": "Report type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Không tìm thấy loại báo cáo" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Yêu cầu quyền admin" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Lỗi server" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/{report_id}/images": {
    "post": {
      "tags": ["ReportImage"],
      "summary": "Upload multiple images and videos for a report (User or Admin)",
      "description": "Upload one or more images (png, jpg, jpeg, gif) and/or videos (mp4, mov, avi) for a report. Requires the user to be the report owner or an admin. Maximum 10 files per request, each file up to 50MB. Reports in CLOSED status cannot accept new media.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "report_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "Report ID"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "images[]": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": "List of image or video files (png, jpg, jpeg, gif, mp4, mov, avi)"
                },
                "alt_text": {
                  "type": "string",
                  "description": "Optional description for all uploaded media files",
                  "example": "Broken window detail"
                }
              },
              "required": ["images[]"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Media uploaded successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/ReportImage"}
              }
            }
          }
        },
        "400": {
          "description": "Missing files, invalid file format, exceeded file count, or file too large",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        },
        "401": {
          "description": "Authentication required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        },
        "403": {
          "description": "User does not own the report, or report is closed",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        },
        "404": {
          "description": "Report not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        }
      }
    },
    "get": {
      "tags": ["ReportImage"],
      "summary": "Get images and videos of a report (Admin or owner)",
      "description": "Retrieve a list of images and videos associated with a report. Only accessible by the report owner or an admin. Excludes soft-deleted media.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "report_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "Report ID"
        }
      ],
      "responses": {
        "200": {
          "description": "List of images and videos",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/ReportImage"}
              }
            }
          }
        },
        "401": {
          "description": "Authentication required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        },
        "403": {
          "description": "User does not own the report",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        },
        "404": {
          "description": "Report not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {"type": "string"}
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/reports/{report_id}/images/{report_image_id}": {
      "delete": {
        "tags": ["ReportImage"],
        "summary": "Soft delete a report image or video (Admin)",
        "description": "Mark a report image or video as deleted (soft delete). Only accessible by admins. The file remains on the server but is marked as deleted in the database.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Report ID"
          },
          {
            "name": "report_image_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Image or video ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Media soft deleted successfully"
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Report or media not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms": {
      "get": {
        "tags": ["Room"],
        "summary": "Get all rooms",
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"},
          {"name": "min_capacity", "in": "query", "schema": {"type": "integer"}, "description": "Minimum capacity"},
          {"name": "max_capacity", "in": "query", "schema": {"type": "integer"}, "description": "Maximum capacity"},
          {"name": "min_price", "in": "query", "schema": {"type": "number"}, "description": "Minimum price"},
          {"name": "max_price", "in": "query", "schema": {"type": "number"}, "description": "Maximum price"},
          {"name": "available", "in": "query", "schema": {"type": "boolean"}, "description": "Filter available rooms"},
          {"name": "search", "in": "query", "schema": {"type": "string"}, "description": "Search by name or description"},
          {"name": "area_id", "in": "query", "schema": {"type": "integer"}, "description": "Filter by area ID"}
        ],
        "responses": {
          "200": {
            "description": "List of rooms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rooms": {"type": "array", "items": {"$ref": "#/components/schemas/Room"}},
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{room_id}": {
      "get": {
        "tags": ["Room"],
        "summary": "Get room by ID",
        "parameters": [
          {"name": "room_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Room ID"}
        ],
        "responses": {
          "200": {
            "description": "Room details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Room"}
              }
            }
          },
          "404": {"description": "Room not found"}
        }
      }
    },
    "/api/admin/rooms": {
      "post": {
    "tags": ["Room"],
    "summary": "Create a new room with optional images (Admin)",
    "security": [{"Bearer": []}],
    "requestBody": {
      "required": true,
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the room",
                "example": "Room A101"
              },
              "capacity": {
                "type": "integer",
                "description": "Maximum number of people the room can hold",
                "example": 4
              },
              "price": {
                "type": "number",
                "format": "float",
                "description": "Price of the room",
                "example": 500000.00
              },
              "area_id": {
                "type": "integer",
                "description": "ID of the area the room belongs to",
                "example": 1
              },
              "description": {
                "type": "string",
                "description": "Description of the room",
                "example": "Modern room with air conditioning",
                "nullable": true
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                },
                "description": "Array of image files (png, jpg, jpeg, gif; max 20 files, 10MB each)",
                "example": ["room_a101_1.jpg", "room_a101_2.jpg"]
              },
              "alt_text_0": {
                "type": "string",
                "description": "Description for the first image",
                "example": "Room A101 overview",
                "nullable": true
              },
              "is_primary_0": {
                "type": "boolean",
                "description": "Whether the first image is primary",
                "example": true,
                "nullable": true
              },
              "sort_order_0": {
                "type": "integer",
                "description": "Sort order for the first image",
                "example": 0,
                "nullable": true
              }
            },
            "required": ["name", "capacity", "price", "area_id"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Room created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Room"
            },
            "example": {
              "room_id": 1,
              "name": "Room A101",
              "capacity": 4,
              "price": "500000.00",
              "current_person_number": 0,
              "description": "Modern room with air conditioning",
              "status": "AVAILABLE",
              "area_id": 1,
              "area_details": {
                "area_id": 1,
                "name": "Building A"
              }
            }
          }
        }
      },
      "400": {
        "description": "Missing required fields, invalid images, or duplicate room name",
        "content": {
          "application/json": {
            "example": {
              "message": "Tên phòng đã tồn tại"
            }
          }
        }
      },
      "404": {
        "description": "Area not found",
        "content": {
          "application/json": {
            "example": {
              "message": "Không tìm thấy khu vực"
            }
          }
        }
      },
      "403": {
        "description": "Admin access required",
        "content": {
          "application/json": {
            "example": {
              "message": "Admin access required"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "example": {
              "message": "Lỗi server không xác định"
            }
          }
        }
      }
    }
      }
    },
    "/api/admin/rooms/{room_id}": {
      "put": {
    "tags": ["Room"],
    "summary": "Update a room and manage its images (Admin)",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "room_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of the room to update",
        "example": 1
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Updated name of the room",
                "example": "Room A101 Updated"
              },
              "capacity": {
                "type": "integer",
                "description": "Updated capacity of the room",
                "example": 5
              },
              "price": {
                "type": "number",
                "format": "float",
                "description": "Updated price of the room",
                "example": 600000.00
              },
              "area_id": {
                "type": "integer",
                "description": "Updated area ID of the room",
                "example": 2
              },
              "description": {
                "type": "string",
                "description": "Updated description of the room",
                "example": "Updated modern room with air conditioning",
                "nullable": true
              },
              "status": {
                "type": "string",
                "enum": ["AVAILABLE", "OCCUPIED", "MAINTENANCE", "DISABLED"],
                "description": "Updated status of the room",
                "example": "AVAILABLE"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                },
                "description": "Array of new image files to add (png, jpg, jpeg, gif; max 20 files total, 10MB each)",
                "example": ["room_a101_new.jpg"]
              },
              "alt_text_0": {
                "type": "string",
                "description": "Description for the first new image",
                "example": "Updated Room A101 overview",
                "nullable": true
              },
              "is_primary_0": {
                "type": "boolean",
                "description": "Whether the first new image is primary",
                "example": false,
                "nullable": true
              },
              "sort_order_0": {
                "type": "integer",
                "description": "Sort order for the first new image",
                "example": 2,
                "nullable": true
              },
              "image_ids_to_delete": {
                "type": "string",
                "description": "Comma-separated list of image IDs to soft delete",
                "example": "1,2",
                "nullable": true
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Room updated successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Room"
            },
            "example": {
              "room_id": 1,
              "name": "Room A101 Updated",
              "capacity": 5,
              "price": "600000.00",
              "current_person_number": 0,
              "description": "Updated modern room with air conditioning",
              "status": "AVAILABLE",
              "area_id": 2,
              "area_details": {
                "area_id": 2,
                "name": "Building B"
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input data or duplicate room name",
        "content": {
          "application/json": {
            "example": {
              "message": "Tên phòng đã tồn tại"
            }
          }
        }
      },
      "404": {
        "description": "Room or area not found",
        "content": {
          "application/json": {
            "example": {
              "message": "Không tìm thấy phòng"
            }
          }
        }
      },
      "403": {
        "description": "Admin access required",
        "content": {
          "application/json": {
            "example": {
              "message": "Admin access required"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "example": {
              "message": "Lỗi server không xác định"
            }
          }
        }
      }
    }
      },
      "delete": {
        "tags": ["Room"],
        "summary": "Delete a room (Admin)",
        "description": "Delete a specific room by its ID. Cannot delete if there are active contracts or pending reports.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the room to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Room deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Xóa phòng thành công"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete due to active contracts or pending reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Không thể xóa phòng vì vẫn còn hợp đồng đang hoạt động",
                        "Không thể xóa phòng vì vẫn còn báo cáo chưa giải quyết"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Yêu cầu quyền admin"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Không tìm thấy phòng"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/rooms/{room_id}/reports": {
      "get": {
        "tags": ["Room"],
        "summary": "Get reports of a room (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "room_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Room ID"}
        ],
        "responses": {
          "200": {
            "description": "List of reports",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Report"}}
              }
            }
          },
          "404": {"description": "Room not found"},
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/admin/rooms/{room_id}/users": {
      "get": {
        "tags": ["Room"],
        "summary": "Get users in a room (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "room_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Room ID"}
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/User"}}
              }
            }
          },
          "404": {"description": "Room not found"},
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/admin/rooms/{room_id}/images": {
      "post": {
        "tags": ["RoomImage"],
        "summary": "Upload multiple room images (Admin)",
        "description": "Upload up to 20 images for a room with individual metadata (alt_text, is_primary, sort_order). Only one image can be set as primary. Supported formats: png, jpg, jpeg, gif. Maximum file size: 5MB per image.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Room ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {"type": "string", "format": "binary"},
                    "description": "Array of image files (max 20 files, 5MB each, formats: png, jpg, jpeg, gif)"
                  },
                  "metadata": {
                    "type": "string",
                    "description": "JSON string containing metadata for each image, e.g., {\"image1.jpg\": {\"alt_text\": \"Description\", \"is_primary\": false, \"sort_order\": 0}}",
                    "example": "{\"image1.jpg\": {\"alt_text\": \"Main room view\", \"is_primary\": true, \"sort_order\": 1}, \"image2.jpg\": {\"alt_text\": \"Bedroom\", \"is_primary\": false, \"sort_order\": 2}}"
                  }
                },
                "required": ["images"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/RoomImage"}
                },
                "example": [
                  {
                    "image_id": 1,
                    "room_id": 63,
                    "image_url": "roomimage/Room_A1_-_Area_B/abc123.jpg",
                    "alt_text": "Main room view",
                    "is_primary": true,
                    "sort_order": 1,
                    "uploaded_at": "2025-04-16T12:00:00",
                    "room_details": {
                      "room_id": 63,
                      "name": "Room A1",
                      "capacity": 4,
                      "price": "500.00",
                      "current_person_number": 2,
                      "description": "Comfortable room",
                      "status": "AVAILABLE",
                      "area_id": 1,
                      "area_details": {
                        "area_id": 1,
                        "name": "Area B"
                      }
                    }
                  },
                  {
                    "image_id": 2,
                    "room_id": 63,
                    "image_url": "roomimage/Room_A1_-_Area_B/def456.jpg",
                    "alt_text": "Bedroom",
                    "is_primary": false,
                    "sort_order": 2,
                    "uploaded_at": "2025-04-16T12:00:00",
                    "room_details": {
                      "room_id": 63,
                      "name": "Room A1",
                      "capacity": 4,
                      "price": "500.00",
                      "current_person_number": 2,
                      "description": "Comfortable room",
                      "status": "AVAILABLE",
                      "area_id": 1,
                      "area_details": {
                        "area_id": 1,
                        "name": "Area B"
                      }
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid input (no files, invalid format, size exceeded, too many files)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "file": {"type": "string"},
                          "error": {"type": "string"}
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Lỗi xác thực file",
                  "errors": [
                    {"file": "image1.jpg", "error": "Vượt quá kích thước tối đa 5MB"},
                    {"file": "image2.txt", "error": "Chỉ hỗ trợ định dạng png, jpg, jpeg, gif"}
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Yêu cầu quyền admin"}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Room or area not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Không tìm thấy phòng"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error (database or file system)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Lỗi cơ sở dữ liệu khi lưu hình ảnh"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{room_id}/images": {
      "get": {
        "tags": ["RoomImage"],
        "summary": "Get room images (Public)",
        "description": "Retrieve all images for a specific room by its ID.",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the room to retrieve images for"
          }
        ],
        "responses": {
          "200": {
            "description": "List of room images",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomImage" }
                }
              }
            }
          },
          "404": {
            "description": "No images found for this room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Không tìm thấy ảnh cho phòng này"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/rooms/{room_id}/images/{image_id}": {
      "put": {
        "tags": ["RoomImage"],
        "summary": "Update room image info (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "room_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Room ID"},
          {"name": "image_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Image ID"}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alt_text": {"type": "string", "example": "Hình ảnh mới"},
                  "is_primary": {"type": "boolean", "example": true},
                  "sort_order": {"type": "integer", "example": 1}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/RoomImage"}
              }
            }
          },
          "404": {"description": "Image not found"},
          "403": {"description": "Admin access required"}
        }
      },
      "delete": {
        "tags": ["RoomImage"],
        "summary": "Delete room image (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "room_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Room ID"},
          {"name": "image_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Image ID"}
        ],
        "responses": {
          "204": {"description": "Image deleted"},
          "404": {"description": "Image not found"},
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/admin/rooms/{room_id}/images/reorder": {
      "post": {
        "tags": ["RoomImage"],
        "summary": "Reorder room images (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "room_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Room ID"}
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imageIds": {"type": "array", "items": {"type": "integer"}, "example": [1, 2, 3]}
                },
                "required": ["imageIds"]
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Images reordered"},
          "403": {"description": "Admin access required"}
        }
      }
    },
  "/api/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          },
          {
            "name": "email",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by email (partial match)"
          },
          {
            "name": "fullname",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by fullname (partial match)"
          },
          {
            "name": "phone",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by phone (partial match)"
          },
          {
            "name": "class_name",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by class name (partial match)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/User" }
                    },
                    "total": { "type": "integer", "example": 100 },
                    "pages": { "type": "integer", "example": 10 },
                    "current_page": { "type": "integer", "example": 1 }
                  },
                  "required": ["users", "total", "pages", "current_page"]
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create a new user (Admin)",
        "description": "Creates a new user with a temporary password and sends a reset link via email",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "fullname": {
                    "type": "string",
                    "example": "Nguyen Van A"
                  },
                  "phone": {
                    "type": "string",
                    "example": "0123456789"
                  }
                },
                "required": ["email", "fullname"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully or created but email failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tạo tài khoản thành công! Link đặt mật khẩu đã được gửi."
                    },
                    "user": { "$ref": "#/components/schemas/User" }
                  },
                  "required": ["message", "user"]
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or email already in use",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}": {
      "put": {
        "tags": ["User"],
        "summary": "Update user (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "fullname": {
                    "type": "string",
                    "example": "Tran Thi B"
                  },
                  "phone": {
                    "type": "string",
                    "example": "0987654321"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "Duplicate email",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Soft delete user (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "User soft deleted"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/me": {
      "get": {
        "tags": ["User"],
        "summary": "Get user profile",
        "security": [{"Bearer": []}],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "User access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "put": {
      "tags": ["User"],
        "summary": "Update user profile",
        "description": "Allows the authenticated user to update their personal information, such as full name, phone number, CCCD, date of birth, and class name. All fields are optional. If the full name changes, the avatar directory will be renamed accordingly.",
        "security": [{"Bearer": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "type": "string",
                    "nullable": true,
                    "description": "Full name of the user (2-255 characters).",
                    "example": "Nguyen Van D"
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true,
                    "description": "Phone number (minimum 10 digits, numeric only).",
                    "example": "0987654321"
                  },
                  "cccd": {
                    "type": "string",
                    "nullable": true,
                    "description": "Citizen ID number (exactly 12 digits).",
                    "example": "123456789012"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "nullable": true,
                    "description": "Date of birth in ISO 8601 format (YYYY-MM-DD, not in the future).",
                    "example": "2000-01-01"
                  },
                  "class_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Class name (maximum 50 characters).",
                    "example": "CNTT01"
                  }
                },
                "example": {
                  "fullname": "Nguyen Van D",
                  "phone": "0987654321",
                  "cccd": "123456789012",
                  "date_of_birth": "2000-01-01",
                  "class_name": "CNTT01"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" },
                "example": {
                  "user_id": 10,
                  "email": "test@example.com",
                  "fullname": "Nguyen Van D",
                  "phone": "0987654321",
                  "cccd": "123456789012",
                  "date_of_birth": "2000-01-01",
                  "class_name": "CNTT01",
                  "avatar_url": "http://localhost:5000/Uploads/avatars/test_NguyenVanD/avatar_10_1234567890.jpg",
                  "version": 2
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or duplicate phone/CCCD",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "example": {
                  "message": "Số điện thoại đã được sử dụng bởi người dùng khác"
                }
              }
            }
          },
          "403": {
            "description": "User access required (invalid or missing token)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "example": {
                  "message": "Yêu cầu quyền người dùng"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "example": {
                  "message": "Không tìm thấy người dùng"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "example": {
                  "message": "Lỗi database"
                
                  }
                }
              }
            }
          }
        }
    },
    "/api/me/password": {
      "put": {
        "tags": ["User"],
        "summary": "Change user password",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": {
                    "type": "string",
                    "example": "oldpass123"
                  },
                  "new_password": {
                    "type": "string",
                    "example": "newpass456"
                  }
                },
                "required": ["old_password", "new_password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đổi mật khẩu thành công"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "Missing fields or invalid password",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "401": {
            "description": "Old password incorrect",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "User access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/me/avatar": {
      "put": {
        "tags": ["User"],
        "summary": "Update user avatar",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file (PNG, JPG, JPEG, GIF, max 5MB)"
                  }
                },
                "required": ["avatar"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "Missing file, invalid file type, or file too large",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "User access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}/avatar": {
      "put": {
        "tags": ["User"],
        "summary": "Update user avatar (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file (PNG, JPG, JPEG, GIF, max 5MB)"
                  }
                },
                "required": ["avatar"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "Missing file, invalid file type, or file too large",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/contracts": {
      "get": {
        "tags": ["Contract"],
        "summary": "Get all contracts (Admin)",
        "description": "Retrieve a paginated list of contracts with optional filters. Any provided filters (user_id, email, room_id, status, start_date, end_date, contract_type) must have valid non-empty values.",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number", "example": 1},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page", "example": 10},
          {"name": "user_id", "in": "query", "schema": {"type": "integer"}, "description": "Filter by user ID (mutually exclusive with email)", "example": 1},
          {"name": "email", "in": "query", "schema": {"type": "string"}, "description": "Filter by user email (mutually exclusive with user_id)", "example": "user@example.com"},
          {"name": "room_id", "in": "query", "schema": {"type": "integer"}, "description": "Filter by room ID", "example": 1},
          {"name": "status", "in": "query", "schema": {"type": "string", "enum": ["PENDING", "ACTIVE", "EXPIRED", "TERMINATED"]}, "description": "Filter by status", "example": "PENDING"},
          {"name": "start_date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "Filter by start date (YYYY-MM-DD)", "example": "2025-01-01"},
          {"name": "end_date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "Filter by end date (YYYY-MM-DD)", "example": "2025-12-31"},
          {"name": "contract_type", "in": "query", "schema": {"type": "string", "enum": ["SHORT_TERM", "LONG_TERM"]}, "description": "Filter by contract type", "example": "LONG_TERM"}
          
        ],
        "responses": {
          "200": {
            "description": "List of contracts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contracts": {"type": "array", "items": {"$ref": "#/components/schemas/Contract"}},
                    "total": {"type": "integer", "example": 100},
                    "pages": {"type": "integer", "example": 10},
                    "current_page": {"type": "integer", "example": 1}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or empty query parameters",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "examples": {
                  "empty_param": {
                    "value": {"message": "Tham số status không được để trống"}
                  },
                  "invalid_status": {
                    "value": {"message": "Trạng thái hợp đồng không hợp lệ"}
                  },
                  "invalid_date": {
                    "value": {"message": "Định dạng start_date không hợp lệ (YYYY-MM-DD)"}
                  },
                  "invalid_type": {
                    "value": {"message": "Loại hợp đồng không hợp lệ"}
                  },
                  "both_user_id_and_email": {
                    "value": {"message": "Không thể cung cấp cả user_id và email cùng lúc"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Bạn không có quyền truy cập"}
              }
            }
          },
          "404": {
            "description": "User or room not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "examples": {
                  "user_not_found": {
                    "value": {"message": "Không tìm thấy người dùng"}
                  },
                  "email_not_found": {
                    "value": {"message": "Không tìm thấy người dùng với email này"}
                  },
                  "room_not_found": {
                    "value": {"message": "Không tìm thấy phòng"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Lỗi server khi lấy danh sách hợp đồng"}
              }
            }
          }
        }
      }
    },
    "/api/contracts/{contract_id}": {
      "get": {
        "tags": ["Contract"],
        "summary": "Get contract by ID (Admin or owner)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "contract_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Contract ID", "example": 1}
        ],
        "responses": {
          "200": {
            "description": "Contract details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Contract"}
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Bạn không có quyền xem hợp đồng này"}
              }
            }
          },
          "404": {
            "description": "Contract not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Không tìm thấy hợp đồng"}
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Lỗi server khi lấy chi tiết hợp đồng"}
              }
            }
          }
        }
      }
    },
    "/api/admin/contracts": {
      "post": {
        "tags": ["Contract"],
        "summary": "Create a new contract (Admin)",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {"type": "integer", "example": 1},
                  "room_id": {"type": "integer", "example": 1},
                  "start_date": {"type": "string", "format": "date", "example": "2025-05-01"},
                  "end_date": {"type": "string", "format": "date", "example": "2025-12-31"},
                  "contract_type": {"type": "string", "enum": ["SHORT_TERM", "LONG_TERM"], "example": "LONG_TERM"}
                },
                "required": ["user_id", "room_id", "start_date", "end_date", "contract_type"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contract created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Contract"}
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "examples": {
                  "missing_fields": {
                    "value": {"message": "Yêu cầu user_id, room_id, start_date, end_date và contract_type"}
                  },
                  "invalid_dates": {
                    "value": {"message": "Ngày bắt đầu phải trước ngày kết thúc"}
                  },
                  "past_date": {
                    "value": {"message": "Không thể tạo hợp đồng trong quá khứ"}
                  },
                  "invalid_format": {
                    "value": {"message": "Định dạng ngày không hợp lệ (YYYY-MM-DD)"}
                  },
                  "invalid_type": {
                    "value": {"message": "Loại hợp đồng phải là SHORT_TERM hoặc LONG_TERM"}
                  },
                  "room_full": {
                    "value": {"message": "Phòng đã đầy"}
                  },
                  "invalid_json": {
                    "value": {"message": "Dữ liệu JSON không hợp lệ"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Bạn không có quyền truy cập"}
              }
            }
          },
          "404": {
            "description": "User or room not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "examples": {
                  "user_not_found": {
                    "value": {"message": "Không tìm thấy người dùng"}
                  },
                  "room_not_found": {
                    "value": {"message": "Không tìm thấy phòng"}
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "examples": {
                  "duplicate": {
                    "value": {"message": "Người dùng đã có hợp đồng trong khoảng thời gian này"}
                  },
                  "conflict": {
                    "value": {"message": "Xung đột khi tạo hợp đồng, vui lòng thử lại"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Lỗi server khi tạo hợp đồng"}
              }
            }
          }
        }
      }
    },
    "/api/admin/contracts/{contract_id}": {
      "put": {
        "tags": ["Contract"],
        "summary": "Update contract (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "contract_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Contract ID", "example": 1}
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {"type": "integer", "example": 2},
                  "room_id": {"type": "integer", "example": 2},
                  "start_date": {"type": "string", "format": "date", "example": "2025-06-01"},
                  "end_date": {"type": "string", "format": "date", "example": "2025-11-30"},
                  "contract_type": {"type": "string", "enum": ["SHORT_TERM", "LONG_TERM"], "example": "SHORT_TERM"},
                  "status": {"type": "string", "enum": ["PENDING", "ACTIVE", "EXPIRED", "TERMINATED"], "example": "ACTIVE"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Contract"}
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "examples": {
                  "invalid_json": {
                    "value": {"message": "Dữ liệu JSON không hợp lệ"}
                  },
                  "invalid_dates": {
                    "value": {"message": "Ngày bắt đầu phải trước ngày kết thúc"}
                  },
                  "invalid_format": {
                    "value": {"message": "Định dạng start_date không hợp lệ (YYYY-MM-DD)"}
                  },
                  "invalid_type": {
                    "value": {"message": "Loại hợp đồng phải là SHORT_TERM hoặc LONG_TERM"}
                  },
                  "invalid_status": {
                    "value": {"message": "Trạng thái hợp đồng không hợp lệ"}
                  },
                  "status_restricted": {
                    "value": {"message": "Không thể chuyển hợp đồng đã TERMINATED sang PENDING hoặc ACTIVE"}
                  },
                  "room_full": {
                    "value": {"message": "Phòng đã đầy"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Bạn không có quyền truy cập"}
              }
            }
          },
          "404": {
            "description": "Contract, user, or room not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "examples": {
                  "contract_not_found": {
                    "value": {"message": "Không tìm thấy hợp đồng"}
                  },
                  "user_not_found": {
                    "value": {"message": "Không tìm thấy người dùng"}
                  },
                  "room_not_found": {
                    "value": {"message": "Không tìm thấy phòng"}
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Xung đột khi cập nhật hợp đồng, vui lòng thử lại"}
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Lỗi server khi cập nhật hợp đồng"}
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Contract"],
        "summary": "Delete contract (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "contract_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Contract ID", "example": 1}
        ],
        "responses": {
          "204": {
            "description": "Contract deleted"
          },
          "400": {
            "description": "Cannot delete active contract",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Không thể xóa hợp đồng đang ACTIVE"}
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Bạn không có quyền truy cập"}
              }
            }
          },
          "404": {
            "description": "Contract not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Không tìm thấy hợp đồng"}
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Xung đột khi xóa hợp đồng, vui lòng thử lại"}
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Lỗi server khi xóa hợp đồng"}
              }
            }
          }
        }
      }
    },
    "/api/me/contracts": {
      "get": {
        "tags": ["Contract"],
        "summary": "Get current user's contracts",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number", "example": 1},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page", "example": 10}
        
        ],
        "responses": {
          "200": {
            "description": "List of user's contracts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contracts": {"type": "array", "items": {"$参": "#/components/schemas/Contract"}},
                    "total": {"type": "integer", "example": 50},
                    "pages": {"type": "integer", "example": 5},
                    "current_page": {"type": "integer", "example": 1}
                  }
                }
              }
            }
          },
          "403": {
            "description": "User access required",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Bạn không có quyền truy cập"}
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"},
                "example": {"message": "Lỗi server khi lấy danh sách hợp đồng của người dùng"}
              }
            }
          }
        }
      }
    },
    "/api/admin/monthly-bills/bulk": {
        "post": {
          "tags": ["MonthlyBill"],
          "summary": "Create multiple monthly bills (Admin)",
          "description": "Create monthly bills for multiple rooms for a specific month based on submitted bill details that are not yet linked to a monthly bill. If room_ids is not provided, bills are created for all rooms with valid bill details and active contracts. Requires admin privileges.",
          "security": [{"Bearer": []}],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bill_month": {
                      "type": "string",
                      "format": "date",
                      "example": "2025-04-01",
                      "description": "Billing month in YYYY-MM format (must be first day of month)"
                    },
                    "room_ids": {
                      "type": "array",
                      "items": {"type": "integer"},
                      "example": [1, 2, 3],
                      "description": "List of room IDs to create bills for (optional)"
                    }
                  },
                  "required": ["bill_month"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Bills created (may include errors for some rooms)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "bills_created": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/MonthlyBill"}
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "room_id": {"type": "integer"},
                            "error": {
                              "type": "string",
                              "enum": [
                                "Không tìm thấy chỉ số dịch vụ chưa liên kết cho tháng này",
                                "Không tìm thấy hợp đồng hoạt động cho phòng",
                                "Không tìm thấy người dùng với ID {user_id}"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "enum": [
                          "Yêu cầu bill_month",
                          "Định dạng bill_month không hợp lệ (YYYY-MM)",
                          "bill_month phải là ngày đầu tháng (YYYY-MM)",
                          "Không tìm thấy chỉ số dịch vụ chưa liên kết cho tháng này",
                          "Dữ liệu JSON không hợp lệ"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Rooms or users not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "enum": [
                          "Không tìm thấy phòng với ID: {ids}",
                          "Không tìm thấy người dùng với ID {user_id}",
                          "Không tìm thấy phòng nào"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Lỗi khi tạo hóa đơn"
                      },
                      "error": {"type": "string"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/rooms/{room_id}/bill-details": {
      "post": {
        "tags": ["MonthlyBill"],
        "summary": "Submit bill details for a room (User)",
        "description": "Submit current meter readings for services in a room for a specific month using service IDs. The previous reading is automatically retrieved from the previous month's data. Bill details are saved without an associated monthly bill, which will be created later by an admin. User must have an active contract for the room.",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "ID of the room"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bill_month": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-04-01",
                    "description": "Billing month in YYYY-MM format (must be first day of month)"
                  },
                  "readings": {
                    "type": "object",
                    "example": {
                      "1": {"current": 150},
                      "2": {"current": 60}
                    },
                    "description": "Current meter readings for each service, with service_id as the key (e.g., '1' for Điện, '2' for Nước)."
                  }
                },
                "required": ["bill_month", "readings"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bill details created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/BillDetail"}
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Yêu cầu bill_month và readings",
                        "Định dạng bill_month không hợp lệ (YYYY-MM)",
                        "bill_month phải là ngày đầu tháng (YYYY-MM)",
                        "Yêu cầu chỉ số cho dịch vụ ID {service_id} ({service_name})",
                        "Chỉ số cho dịch vụ ID {service_id} ({service_name}) phải là một object",
                        "Yêu cầu current cho dịch vụ ID {service_id} ({service_name})",
                        "Chỉ số hiện tại cho dịch vụ ID {service_id} ({service_name}) phải là số hợp lệ",
                        "Chỉ số hiện tại cho dịch vụ ID {service_id} ({service_name}) không được âm",
                        "Chỉ số hiện tại phải lớn hơn hoặc bằng chỉ số trước đó cho dịch vụ ID {service_id} ({service_name})",
                        "ID dịch vụ {service_id} không hợp lệ",
                        "Dữ liệu JSON không hợp lệ"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token không hợp lệ"
                    },
                    "error": {"type": "string"}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bạn không có quyền gửi chỉ số cho phòng này"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Không tìm thấy phòng",
                        "Không tìm thấy dịch vụ nào",
                        "Không tìm thấy mức giá hiện tại cho dịch vụ ID {service_id} ({service_name})"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bạn đã gửi chỉ số cho tháng này rồi"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi khi gửi chỉ số"
                    },
                    "error": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }  
    },
    "/api/public/notifications/general": {
      "get": {
        "tags": ["Notification"],
        "summary": "Get public general notifications",
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"}
        ],
        "responses": {
          "200": {
            "description": "List of general notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {"type": "array", "items": {"$ref": "#/components/schemas/Notification"}},
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": ["Notification"],
        "summary": "Get all notifications (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"},
          {"name": "target_type", "in": "query", "schema": {"type": "string"}, "description": "Filter by target type"},
          {"name": "type_id", "in": "query", "schema": {"type": "integer"}, "description": "Filter by type ID"}
        ],
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {"type": "array", "items": {"$ref": "#/components/schemas/Notification"}},
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          },
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/admin/notifications/{notification_id}/recipients": {
      "get": {
        "tags": ["Notification"],
        "summary": "Get recipients of a notification (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "notification_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Notification ID"},
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"},
          {"name": "is_read", "in": "query", "schema": {"type": "boolean"}, "description": "Filter by read status"}
        ],
        "responses": {
          "200": {
            "description": "List of recipients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipients": {"type": "array", "items": {"$ref": "#/components/schemas/NotificationRecipient"}},
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          },
          "404": {"description": "Notification not found"},
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/admin/notifications": {
      "post": {
    "tags": ["Notification"],
    "summary": "Create a new notification with optional media (Admin)",
    "security": [{"Bearer": []}],
    "requestBody": {
      "required": true,
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the notification",
                "example": "Thông báo bảo trì khu A"
              },
              "message": {
                "type": "string",
                "description": "Content of the notification",
                "example": "Bảo trì hệ thống điện từ 9:00–12:00 ngày 20/04/2025."
              },
              "type_id": {
                "type": "integer",
                "description": "ID of the notification type (from notificationtype table)",
                "example": 2
              },
              "target_type": {
                "type": "string",
                "enum": ["ALL", "ROOM", "USER"],
                "description": "Type of target audience",
                "example": "ALL"
              },
              "target_id": {
                "type": "integer",
                "description": "ID of the target (room_id for ROOM, user_id for USER, null for ALL)",
                "example": null
              },
              "related_entity_type": {
                "type": "string",
                "description": "Type of related entity (e.g., BILL, MAINTENANCE)",
                "example": "MAINTENANCE",
                "nullable": true
              },
              "related_entity_id": {
                "type": "integer",
                "description": "ID of the related entity",
                "example": null,
                "nullable": true
              },
              "media": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                },
                "description": "Array of media files (jpg, jpeg, png, mp4, avi; max 10 files, 100MB each)",
                "example": ["image1.jpg", "video1.mp4"]
              },
              "alt_text_0": {
                "type": "string",
                "description": "Description for the first media file",
                "example": "Ảnh bảo trì",
                "nullable": true
              },
              "alt_text_1": {
                "type": "string",
                "description": "Description for the second media file",
                "example": "Video hướng dẫn",
                "nullable": true
              }
            },
            "required": ["title", "message", "type_id", "target_type"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Notification created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notification"
            },
            "example": {
              "id": 1,
              "title": "Thông báo bảo trì khu A",
              "message": "Bảo trì hệ thống điện từ 9:00–12:00 ngày 20/04/2025.",
              "type_id": 2,
              "target_type": "ALL",
              "target_id": null,
              "related_entity_type": "MAINTENANCE",
              "related_entity_id": null,
              "created_at": "2025-04-21T12:00:00Z",
              "notification_type": {
                "id": 2,
                "name": "MAINTENANCE",
                "description": "Thông báo về lịch bảo trì",
                "created_at": "2025-04-21T12:00:00Z"
              },
              "media": []
            }
          }
        }
      },
      "400": {
        "description": "Missing required fields, invalid target type, or media file errors",
        "content": {
          "application/json": {
            "example": {
              "message": "Yêu cầu title, message, type_id và target_type"
            }
          }
        }
      },
      "404": {
        "description": "Type, room, or user not found",
        "content": {
          "application/json": {
            "example": {
              "message": "Không tìm thấy loại thông báo"
            }
          }
        }
      },
      "403": {
        "description": "Admin access required",
        "content": {
          "application/json": {
            "example": {
              "message": "Admin access required"
            }
          }
        }
      }
    }
  
      }
    },
    "/api/admin/notifications/{notification_id}": {
      "put": {
    "tags": ["Notification"],
    "summary": "Update the message and manage media of an existing notification (Admin)",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "notification_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of the notification to update",
        "example": 9
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Updated content of the notification, supports long article-like text (up to 5000 characters, Markdown or basic HTML)",
                "example": "Cập nhật thông báo!\n\nSự kiện giao lưu cộng đồng **25/04/2025** đã được thay đổi lịch trình:\n\n- **Thời gian mới**: 17:00 - 20:00\n- **Địa điểm**: Hội trường KTX\n\nCảm ơn các bạn đã theo dõi! Hãy tham gia để có những khoảnh khắc tuyệt vời! <3"
              },
              "media": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                },
                "description": "Array of new media files to add (jpg, jpeg, png, mp4, avi; max 10 files total, 100MB each)",
                "example": ["new_event_poster.jpg"]
              },
              "alt_text_0": {
                "type": "string",
                "description": "Description for the first new media file",
                "example": "Poster sự kiện cập nhật",
                "nullable": true
              },
              "media_ids_to_delete": {
                "type": "string",
                "description": "Comma-separated list of media IDs to soft delete",
                "example": "1",
                "nullable": true
              }
            },
            "required": ["message"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Notification updated successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notification"
            },
            "example": {
              "id": 9,
              "title": "Sự kiện giao lưu cộng đồng 25/04/2025",
              "message": "Cập nhật thông báo!\n\nSự kiện giao lưu cộng đồng **25/04/2025** đã được thay đổi lịch trình:\n\n- **Thời gian mới**: 17:00 - 20:00\n- **Địa điểm**: Hội trường KTX\n\nCảm ơn các bạn đã theo dõi! Hãy tham gia để có những khoảnh khắc tuyệt vời! <3",
              "type_id": 3,
              "target_type": "ALL",
              "target_id": null,
              "related_entity_type": "COMMUNITY",
              "related_entity_id": null,
              "created_at": "2025-04-18T23:13:04",
              "is_deleted": false,
              "deleted_at": null,
              "notification_type": {
                "id": 3,
                "name": "General",
                "description": "Thông báo liên quan đến các hoạt động chung",
                "created_at": "2025-04-18T17:49:14"
              },
              "media": [
                {
                  "media_id": 2,
                  "notification_id": 9,
                  "media_url": "/notification_media/9_ALL_AdminName/general_20250418_1.mp4",
                  "alt_text": "Video giới thiệu sự kiện",
                  "file_type": "video",
                  "file_size": 3456789
                },
                {
                  "media_id": 3,
                  "notification_id": 9,
                  "media_url": "/notification_media/9_ALL_AdminName/general_20250418_2.jpg",
                  "alt_text": "Poster sự kiện cập nhật",
                  "file_type": "image",
                  "file_size": 234567
                }
              ]
            }
          }
        }
      },
      "400": {
        "description": "Missing message, invalid media, message too long, or notification already deleted",
        "content": {
          "application/json": {
            "example": {
              "message": "Yêu cầu trường message"
            }
          }
        }
      },
      "404": {
        "description": "Notification not found",
        "content": {
          "application/json": {
            "example": {
              "message": "Không tìm thấy thông báo"
            }
          }
        }
      },
      "403": {
        "description": "Admin access required",
        "content": {
          "application/json": {
            "example": {
              "message": "Admin access required"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "example": {
              "message": "Lỗi server nội bộ, vui lòng thử lại sau"
            }
          }
        }
      }
    
        }
      },
      "delete": {
        "tags": ["Notification"],
        "summary": "Delete notification (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "notification_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Notification ID"}
        ],
        "responses": {
          "200": {"description": "Notification deleted"},
          "404": {"description": "Notification not found"},
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/me/notifications": {
     "get": {
    "tags": ["NotificationRecipient"],
    "summary": "Get current user's notifications",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "schema": {"type": "integer", "default": 1},
        "description": "Page number",
        "example": 1
      },
      {
        "name": "limit",
        "in": "query",
        "schema": {"type": "integer", "default": 10},
        "description": "Items per page",
        "example": 10
      },
      {
        "name": "is_read",
        "in": "query",
        "schema": {"type": "boolean"},
        "description": "Filter by read status",
        "example": false
      }
    ],
    "responses": {
      "200": {
        "description": "User's notifications",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "personal_notifications": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/NotificationRecipient"}
                },
                "public_notifications": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Notification"}
                },
                "personal_total": {"type": "integer"},
                "personal_pages": {"type": "integer"},
                "personal_current_page": {"type": "integer"}
              }
            },
            "example": {
              "personal_notifications": [
                {
                  "id": 1,
                  "notification_id": 1,
                  "user_id": 1001,
                  "is_read": false,
                  "read_at": null,
                  "notification_details": {
                    "id": 1,
                    "title": "Thông báo bảo trì khu A",
                    "message": "Bảo trì hệ thống điện từ 9:00–12:00 ngày 20/04/2025.",
                    "type_id": 3,
                    "target_type": "ALL",
                    "target_id": null,
                    "related_entity_type": "MAINTENANCE",
                    "related_entity_id": null,
                    "created_at": "2025-04-22T12:00:00Z",
                    "notification_type": {
                      "id": 3,
                      "name": "MAINTENANCE",
                      "description": "Thông báo về lịch bảo trì",
                      "created_at": "2025-04-22T12:00:00Z"
                    },
                    "media": [
                      {
                        "media_id": 1,
                        "notification_id": 1,
                        "media_url": "/notification_media/abc123.jpg",
                        "alt_text": "Ảnh bảo trì 1",
                        "file_type": "image",
                        "file_size": 123456
                      },
                      {
                        "media_id": 2,
                        "notification_id": 1,
                        "media_url": "/notification_media/def456.jpg",
                        "alt_text": "Ảnh bảo trì 2",
                        "file_type": "image",
                        "file_size": 234567
                      },
                      {
                        "media_id": 3,
                        "notification_id": 1,
                        "media_url": "/notification_media/ghi789.mp4",
                        "alt_text": "Video hướng dẫn",
                        "file_type": "video",
                        "file_size": 3456789
                      }
                    ]
                  }
                }
              ],
              "public_notifications": [
                {
                  "id": 1,
                  "title": "Thông báo bảo trì khu A",
                  "message": "Bảo trì hệ thống điện từ 9:00–12:00 ngày 20/04/2025.",
                  "type_id": 3,
                  "target_type": "ALL",
                  "target_id": null,
                  "related_entity_type": "MAINTENANCE",
                  "related_entity_id": null,
                  "created_at": "2025-04-22T12:00:00Z",
                  "notification_type": {
                    "id": 3,
                    "name": "MAINTENANCE",
                    "description": "Thông báo về lịch bảo trì",
                    "created_at": "2025-04-22T12:00:00Z"
                  },
                  "media": [
                    {
                      "media_id": 1,
                      "notification_id": 1,
                      "media_url": "/notification_media/abc123.jpg",
                      "alt_text": "Ảnh bảo trì 1",
                      "file_type": "image",
                      "file_size": 123456
                    },
                    {
                      "media_id": 2,
                      "notification_id": 1,
                      "media_url": "/notification_media/def456.jpg",
                      "alt_text": "Ảnh bảo trì 2",
                      "file_type": "image",
                      "file_size": 234567
                    },
                    {
                      "media_id": 3,
                      "notification_id": 1,
                      "media_url": "/notification_media/ghi789.mp4",
                      "alt_text": "Video hướng dẫn",
                      "file_type": "video",
                      "file_size": 3456789
                    }
                  ]
                }
              ],
              "personal_total": 1,
              "personal_pages": 1,
              "personal_current_page": 1
            }
          }
        }
      },
      "403": {
        "description": "User access required",
        "content": {
          "application/json": {
            "example": {
              "message": "User access required"
            }
          }
        }
      }
    }
      }
    },
    "/api/me/notifications/{recipient_id}": {
      "put": {
    "tags": ["NotificationRecipient"],
    "summary": "Mark notification as read (User)",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "recipient_id",
        "in": "path",
        "required": true,
        "schema": {"type": "integer"},
        "description": "Recipient ID",
        "example": 1
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "is_read": {
                "type": "boolean",
                "description": "Mark the notification as read",
                "example": true
              }
            },
            "required": ["is_read"]
          },
          "example": {
            "is_read": true
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Notification marked as read",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/NotificationRecipient"},
            "example": {
              "id": 1,
              "notification_id": 1,
              "user_id": 1001,
              "is_read": true,
              "read_at": "2025-04-22T12:00:00Z",
              "notification_details": {
                "id": 1,
                "title": "Thông báo bảo trì khu A",
                "message": "Bảo trì hệ thống điện từ 9:00–12:00 ngày 20/04/2025.",
                "type_id": 3,
                "target_type": "ALL",
                "target_id": null,
                "related_entity_type": "MAINTENANCE",
                "related_entity_id": null,
                "created_at": "2025-04-22T12:00:00Z",
                "notification_type": {
                  "id": 3,
                  "name": "MAINTENANCE",
                  "description": "Thông báo về lịch bảo trì",
                  "created_at": "2025-04-22T12:00:00Z"
                },
                "media": [
                  {
                    "media_id": 1,
                    "notification_id": 1,
                    "media_url": "/notification_media/abc123.jpg",
                    "alt_text": "Ảnh bảo trì 1",
                    "file_type": "image",
                    "file_size": 123456
                  },
                  {
                    "media_id": 2,
                    "notification_id": 1,
                    "media_url": "/notification_media/def456.jpg",
                    "alt_text": "Ảnh bảo trì 2",
                    "file_type": "image",
                    "file_size": 234567
                  },
                  {
                    "media_id": 3,
                    "notification_id": 1,
                    "media_url": "/notification_media/ghi789.mp4",
                    "alt_text": "Video hướng dẫn",
                    "file_type": "video",
                    "file_size": 3456789
                  }
                ]
              }
            }
          }
        }
      },
      "404": {
        "description": "Notification not found",
        "content": {
          "application/json": {
            "example": {
              "message": "Không tìm thấy thông báo"
            }
          }
        }
      },
      "403": {
        "description": "Access denied",
        "content": {
          "application/json": {
            "example": {
              "message": "Bạn không có quyền chỉnh sửa thông báo này"
            }
          }
        }
      }
    }
      }
    },
    "/api/me/notifications/mark-all-read": {
      "put": {
    "tags": ["NotificationRecipient"],
    "summary": "Mark all notifications as read (User)",
    "security": [{"Bearer": []}],
    "responses": {
      "200": {
        "description": "All notifications marked as read",
        "content": {
          "application/json": {
            "example": {
              "message": "Đánh dấu tất cả thông báo là đã đọc"
            }
          }
        }
      },
      "403": {
        "description": "User access required",
        "content": {
          "application/json": {
            "example": {
              "message": "User access required"
            }
          }
        }
      }
    }
      }
    },
    "/api/me/notifications/unread-count": {
      "get": {
        "tags": ["NotificationRecipient"],
        "summary": "Get unread notifications count (User)",
        "security": [{"Bearer": []}],
        "responses": {
          "200": {
            "description": "Unread count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"}
                  }
                }
              }
            }
          },
          "403": {"description": "User access required"}
        }
      }
    },
    "/api/notification-types": {
      "get": {
        "tags": ["NotificationType"],
        "summary": "Get all notification types",
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"}
        ],
        "responses": {
          "200": {
            "description": "List of notification types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notification_types": {"type": "array", "items": {"$ref": "#/components/schemas/NotificationType"}},
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/notification-types": {
      "post": {
        "tags": ["NotificationType"],
        "summary": "Create a new notification type (Admin)",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string", "example": "Bảo trì"},
                  "description": {"type": "string", "example": "Thông báo về bảo trì"}
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification type created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotificationType"}
              }
            }
          },
          "400": {"description": "Missing name or duplicate name"},
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/admin/notification-types/{type_id}": {
      "put": {
        "tags": ["NotificationType"],
        "summary": "Update notification type (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "type_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Notification Type ID"}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string", "example": "Sự kiện"},
                  "description": {"type": "string", "example": "Thông báo về sự kiện"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification type updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotificationType"}
              }
            }
          },
          "400": {"description": "Duplicate name"},
          "404": {"description": "Notification type not found"},
          "403": {"description": "Admin access required"}
        }
      },
      "delete": {
        "tags": ["NotificationType"],
        "summary": "Delete notification type (Admin)",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "type_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Notification Type ID"}
        ],
        "responses": {
          "200": {"description": "Notification type deleted"},
          "404": {"description": "Notification type not found"},
          "403": {"description": "Admin access required"}
        }
      }
    },
   "/api/services": {
      "get": {
        "tags": ["Service"],
        "summary": "Get all services (Admin)",
        "description": "Retrieve a paginated list of all services. Requires admin privileges.",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "default": 10}, "description": "Items per page"}
        ],
        "responses": {
          "200": {
            "description": "List of services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "services": {"type": "array", "items": {"$ref": "#/components/schemas/Service"}},
                    "total": {"type": "integer"},
                    "pages": {"type": "integer"},
                    "current_page": {"type": "integer"}
                  }
                }
              }
            }
          },
          "403": {"description": "Admin access required"}
        }
      },
      "post": {
        "tags": ["Service"],
        "summary": "Create a new service (Admin)",
        "description": "Create a new service. Requires admin privileges.",
        "security": [{"Bearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string", "example": "Điện"},
                  "unit": {"type": "string", "example": "kWh"}
                },
                "required": ["name", "unit"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Service created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Service"}
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tên dịch vụ không được để trống",
                        "Đơn vị không được để trống",
                        "Tên dịch vụ đã tồn tại",
                        "Tên dịch vụ không được vượt quá 100 ký tự",
                        "Đơn vị không được vượt quá 10 ký tự",
                        "Dữ liệu JSON không hợp lệ"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {"description": "Admin access required"}
        }
      }
    },
    "/api/services/{service_id}": {
      "get": {
        "tags": ["Service"],
        "summary": "Get service by ID (Admin)",
        "description": "Retrieve details of a service by ID. Requires admin privileges.",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "service_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Service ID"}
        ],
        "responses": {
          "200": {
            "description": "Service details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Service"}
              }
            }
          },
          "404": {"description": "Service not found"},
          "403": {"description": "Admin access required"}
        }
      },
      "put": {
        "tags": ["Service"],
        "summary": "Update service (Admin)",
        "description": "Update an existing service. Requires admin privileges.",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "service_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Service ID"}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string", "example": "Nước"},
                  "unit": {"type": "string", "example": "m3"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Service"}
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tên dịch vụ không được để trống",
                        "Đơn vị không được để trống",
                        "Tên dịch vụ đã tồn tại",
                        "Tên dịch vụ không được vượt quá 100 ký tự",
                        "Đơn vị không được vượt quá 10 ký tự",
                        "Dữ liệu JSON không hợp lệ"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {"description": "Service not found"},
          "403": {"description": "Admin access required"}
        }
      },
      "delete": {
        "tags": ["Service"],
        "summary": "Delete service (Admin)",
        "description": "Delete a service by ID. Requires admin privileges.",
        "security": [{"Bearer": []}],
        "parameters": [
          {"name": "service_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "Service ID"}
        ],
        "responses": {
          "204": {"description": "Service deleted"},
          "400": {
            "description": "Service has related rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Không thể xóa dịch vụ vì có mức giá liên quan. Vui lòng xóa các mức giá trước."
                    }
                  }
                }
              }
            }
          },
          "404": {"description": "Service not found"},
          "403": {"description": "Admin access required"}
        }
      }
    },
  "/api/service-rates": {
    "get": {
      "tags": ["ServiceRate"],
      "summary": "Get all service rates (Admin)",
      "description": "Retrieve a paginated list of service rates, optionally filtered by service ID. Requires admin privileges.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "schema": {"type": "integer", "default": 1},
          "description": "Page number for pagination"
        },
        {
          "name": "limit",
          "in": "query",
          "schema": {"type": "integer", "default": 10},
          "description": "Number of items per page"
        },
        {
          "name": "service_id",
          "in": "query",
          "schema": {"type": "integer"},
          "description": "Filter by service ID"
        }
      ],
      "responses": {
        "200": {
          "description": "List of service rates",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service_rates": {
                    "type": "array",
                    "items": {"$ref": "#/components/schemas/ServiceRate"}
                  },
                  "total": {"type": "integer", "example": 100},
                  "pages": {"type": "integer", "example": 10},
                  "current_page": {"type": "integer", "example": 1}
                }
              }
            }
          }
        },
        "404": {
          "description": "Service not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Không tìm thấy dịch vụ với ID 999"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Admin access required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Yêu cầu quyền admin"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Lỗi khi lấy danh sách mức giá"
                  },
                  "error": {"type": "string"}
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": ["ServiceRate"],
      "summary": "Create a new service rate (Admin)",
      "description": "Create a new service rate for a service. Requires admin privileges.",
      "security": [{"Bearer": []}],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "service_id": {
                  "type": "integer",
                  "example": 1,
                  "description": "ID of the service"
                },
                "unit_price": {
                  "type": "string",
                  "format": "decimal",
                  "example": "5000.00",
                  "description": "Price per unit, non-negative, max 99999999.99"
                },
                "effective_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2025-04-01",
                  "description": "Effective date in YYYY-MM-DD format"
                }
              },
              "required": ["service_id", "unit_price", "effective_date"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Service rate created",
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ServiceRate"}
            }
          }
        },
        "400": {
          "description": "Invalid input",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "enum": [
                      "Yêu cầu service_id, unit_price và effective_date",
                      "service_id phải là số nguyên",
                      "unit_price phải là số không âm và không vượt quá 99999999.99",
                      "Định dạng effective_date không hợp lệ (YYYY-MM-DD)",
                      "Dữ liệu JSON không hợp lệ"
                    ]
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Service not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Không tìm thấy dịch vụ với ID 999"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Admin access required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Yêu cầu quyền admin"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Lỗi khi tạo mức giá"
                  },
                  "error": {"type": "string"}
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/bill-details": {
  "get": {
    "tags": ["MonthlyBill"],
    "summary": "Get all bill details (Admin)",
    "description": "Retrieve a list of all bill details in the system. Requires admin privileges.",
    "security": [{"Bearer": []}],
    "responses": {
      "200": {
        "description": "List of all bill details",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {"$ref": "#/components/schemas/BillDetail"}
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi lấy danh sách chỉ số"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  }
},
  "/api/admin/monthly-bills": {
  "get": {
    "tags": ["MonthlyBill"],
    "summary": "Get all monthly bills (Admin)",
    "description": "Retrieve a list of all monthly bills in the system. Requires admin privileges.",
    "security": [{"Bearer": []}],
    "responses": {
      "200": {
        "description": "List of all monthly bills",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {"$ref": "#/components/schemas/MonthlyBill"}
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi lấy danh sách hóa đơn"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  }
},
  "/api/rooms/{room_id}/my-bill-details": {
    "get": {
      "tags": ["MonthlyBill"],
      "summary": "Get all bill details for a room (User/Admin)",
      "description": "Retrieve a list of all bill details for a specific room. For users, they must have an active contract for the room to view the details. Admins can access this endpoint without contract restrictions.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "room_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "ID of the room"
        }
      ],
      "responses": {
        "200": {
          "description": "List of all bill details for the room",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/BillDetail"}
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Token không hợp lệ"
                  },
                  "error": {"type": "string"}
                }
              }
            }
          }
        },
        "403": {
          "description": "Access denied (for non-admin users without an active contract)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "enum": [
                      "Yêu cầu quyền người dùng hoặc admin",
                      "Bạn không có quyền xem chỉ số của phòng này"
                    ]
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Room or user not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "enum": [
                      "Không tìm thấy phòng",
                      "Không tìm thấy người dùng hoặc người dùng đã bị xóa"
                    ]
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Lỗi khi lấy danh sách chỉ số"
                  },
                  "error": {"type": "string"}
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/paid-bills": {
  "delete": {
    "tags": ["MonthlyBill"],
    "summary": "Delete paid monthly bills and related bill details (Admin)",
    "description": "Delete all paid monthly bills (payment_status='PAID') and their related bill details. Requires admin privileges.",
    "security": [{"Bearer": []}],
    "responses": {
      "200": {
        "description": "Paid bills and related bill details deleted",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Đã xóa các hóa đơn và chi tiết hóa đơn đã thanh toán"
                },
                "deleted_monthly_bills": {
                  "type": "array",
                  "items": {"type": "integer"},
                  "description": "List of deleted MonthlyBill IDs"
                },
                "deleted_bill_details": {
                  "type": "array",
                  "items": {"type": "integer"},
                  "description": "List of deleted BillDetail IDs"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "No paid bills found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Không tìm thấy hóa đơn nào đã thanh toán để xóa"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi xóa hóa đơn"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  }
},
  "/api/service-rates/current/{service_id}": {
    "get": {
      "tags": ["ServiceRate"],
      "summary": "Get current service rate (Admin)",
      "description": "Retrieve the current service rate for a service based on effective date. Requires admin privileges.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "service_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "ID of the service"
        }
      ],
      "responses": {
        "200": {
          "description": "Current service rate",
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ServiceRate"}
            }
          }
        },
        "404": {
          "description": "Service or current rate not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "enum": [
                      "Không tìm thấy dịch vụ với ID {service_id}",
                      "Không tìm thấy mức giá hiện tại cho dịch vụ này"
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Admin access required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Yêu cầu quyền admin"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Lỗi khi lấy mức giá hiện tại"
                  },
                  "error": {"type": "string"}
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/service-rates/{rate_id}": {
    "get": {
      "tags": ["ServiceRate"],
      "summary": "Get service rate by ID (Admin)",
      "description": "Retrieve details of a service rate by ID. Requires admin privileges.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "rate_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "ID of the service rate"
        }
      ],
      "responses": {
        "200": {
          "description": "Service rate details",
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ServiceRate"}
            }
          }
        },
        "404": {
          "description": "Rate not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Không tìm thấy mức giá với ID 999"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Admin access required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Yêu cầu quyền admin"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Lỗi khi lấy mức giá"
                  },
                  "error": {"type": "string"}
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": ["ServiceRate"],
      "summary": "Update service rate (Admin)",
      "description": "Update an existing service rate. Requires admin privileges.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "rate_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "ID of the service rate"
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "service_id": {
                  "type": "integer",
                  "example": 2,
                  "description": "ID of the service"
                },
                "unit_price": {
                  "type": "string",
                  "format": "decimal",
                  "example": "6000.00",
                  "description": "Price per unit, non-negative, max 99999999.99"
                },
                "effective_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2025-05-01",
                  "description": "Effective date in YYYY-MM-DD format"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Service rate updated",
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ServiceRate"}
            }
          }
        },
        "400": {
          "description": "Invalid input",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "enum": [
                      "service_id phải là số nguyên",
                      "unit_price phải là số không âm và không vượt quá 99999999.99",
                      "Định dạng effective_date không hợp lệ (YYYY-MM-DD)",
                      "Dữ liệu JSON không hợp lệ"
                    ]
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Rate or service not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "enum": [
                      "Không tìm thấy mức giá với ID {rate_id}",
                      "Không tìm thấy dịch vụ với ID {service_id}"
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Admin access required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Yêu cầu quyền admin"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Lỗi khi cập nhật mức giá"
                  },
                  "error": {"type": "string"}
                }
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": ["ServiceRate"],
      "summary": "Delete service rate (Admin)",
      "description": "Delete a service rate by ID. Requires admin privileges.",
      "security": [{"Bearer": []}],
      "parameters": [
        {
          "name": "rate_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "ID of the service rate"
        }
      ],
      "responses": {
        "204": {
          "description": "Service rate deleted"
        },
        "404": {
          "description": "Rate not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Không tìm thấy mức giá với ID 999"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Admin access required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Yêu cầu quyền admin"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Lỗi khi xóa mức giá"
                  },
                  "error": {"type": "string"}
                  }
                }
             }
            }
          }
        }
      }
    },
    "/api/payment-transactions": {
      "get": {
    "tags": ["PaymentTransaction"],
    "summary": "Get all payment transactions (Admin)",
    "description": "Retrieve a paginated list of all payment transactions, optionally filtered by bill_id and status. Requires admin privileges.",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "schema": {"type": "integer", "default": 1},
        "description": "Page number"
      },
      {
        "name": "limit",
        "in": "query",
        "schema": {"type": "integer", "default": 10},
        "description": "Number of items per page"
      },
      {
        "name": "bill_id",
        "in": "query",
        "schema": {"type": "integer"},
        "description": "Filter by bill ID"
      },
      {
        "name": "status",
        "in": "query",
        "schema": {"type": "string"},
        "description": "Filter by status (PENDING, SUCCESS, FAILED, CANCELLED)"
      }
    ],
    "responses": {
      "200": {
        "description": "List of payment transactions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "payment_transactions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transaction_id": {"type": "integer"},
                      "bill_id": {"type": "integer"},
                      "amount": {"type": "string"},
                      "payment_method": {"type": "string"},
                      "status": {"type": "string"},
                      "created_at": {"type": "string"},
                      "processed_at": {"type": "string", "nullable": true},
                      "gateway_reference": {"type": "string", "nullable": true},
                      "qr_payload": {"type": "string", "nullable": true},
                      "error_message": {"type": "string", "nullable": true}
                    }
                  }
                },
                "total": {"type": "integer"},
                "pages": {"type": "integer"},
                "current_page": {"type": "integer"}
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Page và limit phải lớn hơn 0",
                    "Trạng thái không hợp lệ. Trạng thái cho phép: PENDING, SUCCESS, FAILED, CANCELLED"
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi lấy danh sách giao dịch"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  
      },
"post": {
    "tags": ["PaymentTransaction"],
    "summary": "Create or retrieve a payment transaction (User)",
    "description": "Create a payment transaction for a specific monthly bill. If a PENDING transaction already exists and the bill is still PENDING, returns the payment URL for the existing transaction. The user must be the owner of the bill. The amount is automatically taken from the bill's total_amount. Returns a VNPay payment URL if applicable.",
    "security": [{"Bearer": []}],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "bill_id": {
                "type": "integer",
                "example": 1,
                "description": "ID of the monthly bill to pay"
              },
              "payment_method": {
                "type": "string",
                "example": "VIETQR",
                "description": "Payment method (must be one of the allowed methods in the bill)"
              }
   
            },
            "required": ["bill_id", "payment_method"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Payment transaction created or retrieved",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lấy lại URL thanh toán từ giao dịch PENDING hiện tại"
                },
                "payment_url": {
                  "type": "string",
                  "example": "https://pay.vnpay.vn/..."
                },
                "transaction_id": {
                  "type": "integer",
                  "example": 123,
                  "description": "ID of the payment transaction (returned if retrieving an existing transaction)"
                },
                "bill_details": {
                  "type": "object",
                  "properties": {
                    "bill_id": {"type": "integer"},
                    "total_amount": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Dữ liệu JSON không hợp lệ",
                    "Yêu cầu bill_id và payment_method",
                    "Phương thức thanh toán {method} không được phép. Phương thức được phép: {allowed_methods}",
                    "Phương thức thanh toán không hợp lệ: {method}"
                  ]
                },
                "error": {
                  "type": "string",
                  "description": "Chi tiết lỗi nếu JSON không hợp lệ"
                },
                "hint": {
                  "type": "string",
                  "description": "Gợi ý khắc phục lỗi JSON"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Token không hợp lệ"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      },
      "403": {
        "description": "Access denied",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Bạn không có quyền thanh toán hóa đơn này",
                    "Bạn không có quyền thanh toán hóa đơn của phòng này"
                  ]
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Bill or user not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Không tìm thấy hóa đơn",
                    "Không tìm thấy người dùng hoặc người dùng đã bị xóa"
                  ]
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Hóa đơn đã được thanh toán",
                    "Không thể tạo giao dịch mới: Đã có một giao dịch PENDING nhưng hóa đơn không còn ở trạng thái PENDING",
                    "Lỗi khi tạo giao dịch: Hóa đơn không hợp lệ hoặc xung đột dữ liệu"
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi tạo giao dịch thanh toán"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  
  
  }
    },
    "/api/payment-transactions/callback": {
"get": {
    "tags": ["PaymentTransaction"],
    "summary": "Handle VNPay payment callback",
    "description": "Handle the callback from VNPay after a payment attempt. Updates the transaction and bill status based on the payment result.",
    "parameters": [
      {
        "name": "vnp_TxnRef",
        "in": "query",
        "required": true,
        "schema": {"type": "string"},
        "description": "Transaction ID"
      },
      {
        "name": "vnp_ResponseCode",
        "in": "query",
        "required": true,
        "schema": {"type": "string"},
        "description": "Response code from VNPay"
      },
      {
        "name": "vnp_TransactionNo",
        "in": "query",
        "schema": {"type": "string"},
        "description": "Gateway transaction reference"
      },
      {
        "name": "vnp_Message",
        "in": "query",
        "schema": {"type": "string"},
        "description": "Error message (if any)"
      },
      {
        "name": "vnp_SecureHash",
        "in": "query",
        "required": true,
        "schema": {"type": "string"},
        "description": "Secure hash for verification"
      }
    ],
    "responses": {
      "200": {
        "description": "Transaction processed successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Ghi nhận giao dịch thành công"
                },
                "transaction": {
                  "type": "object",
                  "properties": {
                    "transaction_id": {"type": "integer"},
                    "bill_id": {"type": "integer"},
                    "amount": {"type": "string"},
                    "payment_method": {"type": "string"},
                    "status": {"type": "string"},
                    "created_at": {"type": "string"},
                    "processed_at": {"type": "string", "nullable": true},
                    "gateway_reference": {"type": "string", "nullable": true},
                    "qr_payload": {"type": "string", "nullable": true},
                    "error_message": {"type": "string", "nullable": true}
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid signature",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Chữ ký không hợp lệ"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Transaction or bill not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Không tìm thấy giao dịch",
                    "Không tìm thấy hóa đơn liên quan đến giao dịch"
                  ]
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Giao dịch không thể cập nhật: Trạng thái không phải PENDING",
                    "Lỗi khi cập nhật giao dịch: Xung đột dữ liệu"
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi xử lý callback thanh toán"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  }
    },
    "/api/payment-transactions/{transaction_id}": {
   "get": {
    "tags": ["PaymentTransaction"],
    "summary": "Get a payment transaction by ID (User/Admin)",
    "description": "Retrieve details of a payment transaction by ID. Users can only view their own transactions; admins can view all transactions.",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "transaction_id",
        "in": "path",
        "required": true,
        "schema": {"type": "integer"},
        "description": "ID of the payment transaction"
      }
    ],
    "responses": {
      "200": {
        "description": "Transaction details",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_id": {"type": "integer"},
                "bill_id": {"type": "integer"},
                "amount": {"type": "string"},
                "payment_method": {"type": "string"},
                "status": {"type": "string"},
                "created_at": {"type": "string"},
                "processed_at": {"type": "string", "nullable": true},
                "gateway_reference": {"type": "string", "nullable": true},
                "qr_payload": {"type": "string", "nullable": true},
                "error_message": {"type": "string", "nullable": true}
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Token không hợp lệ"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      },
      "403": {
        "description": "Access denied",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bạn không có quyền xem giao dịch này"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Transaction or bill not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Không tìm thấy giao dịch",
                    "Không tìm thấy hóa đơn liên quan đến giao dịch"
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi lấy chi tiết giao dịch"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
      },
      "put": {
    "tags": ["PaymentTransaction"],
    "summary": "Update a payment transaction (Admin)",
    "description": "Update the details of a payment transaction, including amount, payment_method, and status. Updates the associated bill status if necessary. Requires admin privileges.",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "transaction_id",
        "in": "path",
        "required": true,
        "schema": {"type": "integer"},
        "description": "ID of the payment transaction to update"
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "example": "10000.00",
                "description": "Updated amount (must match the bill's total_amount)"
              },
              "payment_method": {
                "type": "string",
                "example": "VIETQR",
                "description": "Updated payment method"
              },
              "status": {
                "type": "string",
                "example": "SUCCESS",
                "description": "Updated status (PENDING, SUCCESS, FAILED, CANCELLED)"
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Transaction updated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transaction_id": {"type": "integer"},
                "bill_id": {"type": "integer"},
                "amount": {"type": "string"},
                "payment_method": {"type": "string"},
                "status": {"type": "string"},
                "created_at": {"type": "string"},
                "processed_at": {"type": "string", "nullable": true},
                "gateway_reference": {"type": "string", "nullable": true},
                "qr_payload": {"type": "string", "nullable": true},
                "error_message": {"type": "string", "nullable": true}
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Số tiền không hợp lệ",
                    "Số tiền phải lớn hơn 0",
                    "Số tiền không khớp với hóa đơn. Số tiền yêu cầu: {total_amount}",
                    "Phương thức thanh toán không hợp lệ: {method}",
                    "Trạng thái không hợp lệ. Trạng thái cho phép: PENDING, SUCCESS, FAILED, CANCELLED"
                  ]
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Transaction or bill not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Không tìm thấy giao dịch",
                    "Không tìm thấy hóa đơn liên quan đến giao dịch"
                  ]
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Không thể cập nhật: Giao dịch không ở trạng thái PENDING",
                    "Lỗi khi cập nhật giao dịch: Xung đột dữ liệu"
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi cập nhật giao dịch"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
      },
     "delete": {
    "tags": ["PaymentTransaction"],
    "summary": "Delete a payment transaction (Admin)",
    "description": "Delete a payment transaction and reset the associated bill's payment status if necessary. Cannot delete successful transactions. Requires admin privileges.",
    "security": [{"Bearer": []}],
    "parameters": [
      {
        "name": "transaction_id",
        "in": "path",
        "required": true,
        "schema": {"type": "integer"},
        "description": "ID of the payment transaction to delete"
      }
    ],
    "responses": {
      "204": {
        "description": "Transaction deleted"
      },
      "404": {
        "description": "Transaction or bill not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Không tìm thấy giao dịch",
                    "Không tìm thấy hóa đơn liên quan đến giao dịch"
                  ]
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Không thể xóa: Giao dịch đã thành công",
                    "Lỗi khi xóa giao dịch: Xung đột dữ liệu"
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Lỗi khi xóa giao dịch"
                },
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  }
}
  },
  "components": {
    "schemas": {
      "Admin": {
        "type": "object",
        "properties": {
          "admin_id": {"type": "integer"},
          "username": {"type": "string"},
          "full_name": {"type": "string"},
          "email": {"type": "string"},
          "phone": {"type": "string"},
          "created_at": {"type": "string", "format": "date-time"}
        }
      },
      "Area": {
        "type": "object",
        "properties": {
          "area_id": {"type": "integer"},
          "name": {"type": "string"}
        }
      },
      "Registration": {
        "type": "object",
        "properties": {
          "registration_id": {
            "type": "integer",
            "example": 8
          },
          "name_student": {
            "type": "string",
            "example": "Nguyen Van A"
          },
          "email": {
            "type": "string",
            "example": "1052102006sv1.dut.udn.vn"
          },
          "phone_number": {
            "type": "string",
            "example": "0123456789"
          },
          "room_id": {
            "type": "integer",
            "example": 63
          },
          "number_of_people": {
            "type": "integer",
            "example": 3
          },
          "information": {
            "type": "string",
            "example": "Thông tin bổ sung",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"],
            "example": "PENDING"
          },
          "rejection_reason": {
            "type": "string",
            "example": "Phòng đã đầy",
            "nullable": true
          },
          "processed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-13T12:00:00",
            "nullable": true
          },
          "meeting_datetime": {
            "type": "string",
            "example": "Vẫn chưa phòng kỳ túc xá"
          },
          "meeting_location": {
            "type": "string",
            "example": null,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-14T01:07:10"
          },
          "room_details": {
            "$ref": "#/components/schemas/Room"
          }
        },
        "required": [
          "registration_id",
          "name_student",
          "email",
          "phone_number",
          "room_id",
          "number_of_people",
          "status",
          "meeting_datetime",
          "created_at"
        ]
      },
      "Report": {
        "type": "object",
        "properties": {
          "report_id": {"type": "integer"},
          "room_id": {"type": "integer"},
          "user_id": {"type": "integer"},
          "report_type_id": {"type": "integer"},
          "content": {"type": "string"},
          "status": {"type": "string", "enum": ["PENDING", "RESOLVED", "REJECTED"]}
        }
      },
      "ReportType": {
        "type": "object",
        "properties": {
          "report_type_id": {"type": "integer"},
          "name": {"type": "string"},
          "description": {"type": "string"}
        }
      },
      "ReportImage": {
        "type": "object",
        "properties": {
          "image_id": {
            "type": "integer",
            "description": "Unique identifier for the image or video",
            "example": 1
          },
          "report_id": {
            "type": "integer",
            "description": "ID of the associated report",
            "example": 1
          },
          "image_url": {
            "type": "string",
            "description": "URL of the image or video file",
            "example": "http://localhost:5000/uploads/report_images/<uuid>_image.jpg"
          },
          "alt_text": {
            "type": ["string", "null"],
            "description": "Optional description of the media",
            "example": "Broken window detail"
          },
          "uploaded_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Timestamp when the media was uploaded",
            "example": "2025-04-16T04:54:05"
          },
          "is_primary": {
            "type": "boolean",
            "description": "Whether this is the primary media for the report",
            "example": false
          },
          "sort_order": {
            "type": "integer",
            "description": "Order for displaying media",
            "example": 0
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Whether the media is soft deleted",
            "example": false
          },
          "deleted_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Timestamp when the media was soft deleted",
            "example": null
          },
          "file_type": {
            "type": "string",
            "enum": ["image", "video"],
            "description": "Type of media (image or video)",
            "example": "image"
          },
          "report_details": {
            "type": ["object", "null"],
            "description": "Details of the associated report",
            "properties": {
              "report_id": {"type": "integer"},
              "title": {"type": "string"},
              "status": {"type": "string"}
            }
          }
        },
        "required": ["image_id", "report_id", "image_url", "is_primary", "is_deleted", "file_type"]
      },
      "Room": {
        "type": "object",
        "properties": {
          "room_id": {
            "type": "integer",
            "example": 63
          },
          "name": {
            "type": "string",
            "example": "Room A"
          },
          "capacity": {
            "type": "integer",
            "example": 10
          },
          "price": {
            "type": "string",
            "example": "500000.00"
          },
          "description": {
            "type": "string",
            "example": "A cozy meeting room",
            "nullable": true
          },
          "area_id": {
            "type": "integer",
            "example": 1
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "OCCUPIED", "MAINTENANCE", "DISABLED"],
            "example": "AVAILABLE"
          },
          "current_person_number": {
            "type": "integer",
            "example": 5
          },
          "area_details": {
            "$ref": "#/components/schemas/Area"
          }
        },
        "required": ["room_id", "name", "capacity", "price", "current_person_number", "status", "area_id"]
      },
      "RoomImage": {
        "type": "object",
        "properties": {
          "image_id": {"type": "integer"},
          "room_id": {"type": "integer"},
          "image_url": {"type": "string"},
          "alt_text": {"type": "string"},
          "is_primary": {"type": "boolean"},
          "sort_order": {"type": "integer"}
        }
      },
     "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "fullname": {
            "type": "string",
            "example": "Nguyen Van A"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "example": "0123456789",
            "nullable": true
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "example": "2000-01-01",
            "nullable": true
          },
          "CCCD": {
            "type": "string",
            "example": "123456789012",
            "nullable": true
          },
          "class_name": {
            "type": "string",
            "example": "CNTT01",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "example": "/Uploads/avatars/user_example_com_nguyen_van_a/1_1634567890.jpg",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-01T12:00:00Z",
            "nullable": true
          }
        },
        "required": ["user_id", "fullname", "email", "created_at"]
      },
      "Contract": {
        "type": "object",
        "properties": {
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique ID of the contract",
            "example": 1
          },
          "room_id": {
            "type": "integer",
            "description": "ID of the room",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the user",
            "example": 1
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACTIVE", "EXPIRED", "TERMINATED"],
            "description": "Status of the contract",
            "example": "PENDING"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-04-14T10:00:00Z"
          },
          "contract_type": {
            "type": "string",
            "enum": ["SHORT_TERM", "LONG_TERM"],
            "description": "Type of contract",
            "example": "LONG_TERM"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Start date of the contract",
            "example": "2025-05-01"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "End date of the contract",
            "example": "2025-12-31"
          },
          "room_details": {
            "type": "object",
            "nullable": true,
            "description": "Details of the room (structure depends on Room model)"
          },
          "user_details": {
            "type": "object",
            "nullable": true,
            "description": "Details of the user (structure depends on User model)"
          }
        },
        "required": [
          "contract_id",
          "room_id",
          "user_id",
          "status",
          "created_at",
          "contract_type",
          "start_date",
          "end_date"
        ]
      }
      ,
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Không tìm thấy hợp đồng"
          }
        },
        "required": ["message"]
      },
      "BillDetail": {
        "type": "object",
        "properties": {
          "detail_id": {"type": "integer"},
          "bill_month": {"type": "string", "format": "date"},
          "previous_reading": {"type": "string"},
          "current_reading": {"type": "string"},
          "price": {"type": "number"},
          "submitted_by": {"type": "integer"},
          "room_id": {"type": "integer"}
        }
      },
      "MonthlyBill": {
        "type": "object",
        "properties": {
          "bill_id": {"type": "integer", "example": 1},
          "user_id": {"type": "integer", "example": 1},
          "bill_month": {"type": "string", "format": "date", "example": "2025-04-01"},
          "total_amount": {"type": "string", "format": "decimal", "example": "15000.00"},
          "payment_status": {"type": "string", "enum": ["PENDING", "PAID", "FAILED", "OVERDUE"], "example": "PENDING"},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-04-01T10:00:00Z"},
          "room_id": {"type": "integer", "example": 1},
          "payment_method_allowed": {"type": "string", "example": "VIETQR,CASH,BANK_TRANSFER", "nullable": true},
          "paid_at": {"type": "string", "format": "date-time", "example": null, "nullable": true},
          "transaction_reference": {"type": "string", "example": null, "nullable": true},
          "user_details": {"$ref": "#/components/schemas/User", "nullable": true},
          "room_details": {"$ref": "#/components/schemas/Room", "nullable": true},
          "details": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/BillDetail"}
          }
        },
        "required": ["bill_id", "user_id", "bill_month", "total_amount", "payment_status", "created_at", "room_id"]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "notification_id": {"type": "integer"},
          "title": {"type": "string"},
          "message": {"type": "string"},
          "type_id": {"type": "integer"},
          "target_type": {"type": "string", "enum": ["ALL", "ROOM", "USER"]},
          "target_id": {"type": "integer"},
          "related_entity_type": {"type": "string"},
          "related_entity_id": {"type": "integer"}
        }
      },
      "NotificationRecipient": {
        "type": "object",
        "properties": {
          "recipient_id": {"type": "integer"},
          "notification_id": {"type": "integer"},
          "user_id": {"type": "integer"},
          "is_read": {"type": "boolean"},
          "read_at": {"type": "string", "format": "date-time"}
        }
      },
      "NotificationType": {
        "type": "object",
        "properties": {
          "type_id": {"type": "integer"},
          "name": {"type": "string"},
          "description": {"type": "string"}
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "service_id": {"type": "integer"},
          "name": {"type": "string"},
          "description": {"type": "string"}
        }
      },
      "ServiceRate": {
        "type": "object",
        "properties": {
          "rate_id": {"type": "integer"},
          "service_id": {"type": "integer"},
          "unit_price": {"type": "number"},
          "effective_date": {"type": "string", "format": "date"}
        }
      },
      "PaymentTransaction": {
        "type": "object",
        "properties": {
          "transaction_id": {"type": "integer"},
          "bill_id": {"type": "integer"},
          "amount": {"type": "number"},
          "payment_method": {"type": "string"},
          "status": {"type": "string", "enum": ["PENDING", "SUCCESS", "FAILED"]},
          "processed_at": {"type": "string", "format": "date-time"},
          "gateway_reference": {"type": "string"},
          "error_message": {"type": "string"}
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}

